<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.17.1226.1925                               -->
<workbook original-version='10.5' source-build='10.5.0 (10500.17.1226.1925)' source-platform='win' version='10.5' xml:base='https://tab.worldbank.org' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='SAR_MNA_Summary' path='/t/WBG/workbooks' revision='4.8' site='WBG' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column caption='Asset selection parameter 2' datatype='string' name='[Asset selection parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;electricity&quot;'>
        <calculation class='tableau' formula='&quot;electricity&quot;' />
        <members>
          <member value='&quot;television&quot;' />
          <member value='&quot;refrigerator&quot;' />
          <member value='&quot;sewingmachine&quot;' />
          <member value='&quot;washingmachine&quot;' />
          <member value='&quot;cellphone&quot;' />
          <member value='&quot;fan&quot;' />
          <member value='&quot;motorcar&quot;' />
          <member value='&quot;computer&quot;' />
          <member value='&quot;electricity&quot;' />
        </members>
      </column>
      <column caption='Asset selection parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;refrigerator&quot;'>
        <calculation class='tableau' formula='&quot;refrigerator&quot;' />
        <members>
          <member value='&quot;television&quot;' />
          <member value='&quot;refrigerator&quot;' />
          <member value='&quot;sewingmachine&quot;' />
          <member value='&quot;washingmachine&quot;' />
          <member value='&quot;cellphone&quot;' />
          <member value='&quot;fan&quot;' />
          <member value='&quot;motorcar&quot;' />
          <member value='&quot;computer&quot;' />
          <member value='&quot;electricity&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Sheet1 (Available_Variables)' inline='true' name='federated.0j413uu042entj1d8lxvt01prq5u' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Available_Variables' name='excel-direct.0in762p1xh3d5513v4w0018n2sxd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/WB459082/Desktop/SAR_MNA_Summary/Available_Variables.xls' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0in762p1xh3d5513v4w0018n2sxd' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:S6281:no:A1:S6281:0' header='yes' outcome='2'>
            <column datatype='string' name='Category' ordinal='0' />
            <column datatype='string' name='Variables' ordinal='1' />
            <column datatype='string' name='Type' ordinal='2' />
            <column datatype='string' name='v2filter' ordinal='3' />
            <column datatype='string' name='varlab' ordinal='4' />
            <column datatype='string' name='desc' ordinal='5' />
            <column datatype='integer' name='Available' ordinal='6' />
            <column datatype='real' name='Mean' ordinal='7' />
            <column datatype='real' name='SD' ordinal='8' />
            <column datatype='integer' name='N' ordinal='9' />
            <column datatype='integer' name='max_W' ordinal='10' />
            <column datatype='string' name='Country' ordinal='11' />
            <column datatype='integer' name='Year' ordinal='12' />
            <column datatype='string' name='Country_Year' ordinal='13' />
            <column datatype='integer' name='Dictionary' ordinal='14' />
            <column datatype='integer' name='Basic' ordinal='15' />
            <column datatype='integer' name='Categories' ordinal='16' />
            <column datatype='integer' name='max_N' ordinal='17' />
            <column datatype='real' name='Missing' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Variables</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Variables]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Variables</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v2filter</remote-name>
            <remote-type>130</remote-type>
            <local-name>[v2filter]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>v2filter</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>varlab</remote-name>
            <remote-type>130</remote-type>
            <local-name>[varlab]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>varlab</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>desc</remote-name>
            <remote-type>130</remote-type>
            <local-name>[desc]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>desc</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Available</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Available]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Available</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mean]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Mean</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SD]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>SD</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>N</remote-name>
            <remote-type>20</remote-type>
            <local-name>[N]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>N</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_W</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_W]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>max_W</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country_Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country_Year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dictionary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dictionary]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Dictionary</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Basic</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Basic]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Basic</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Categories</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Categories]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Categories</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_N</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_N]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>max_N</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Missing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Missing]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Missing</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:S6281:no:A1:S6281:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Available]' role='measure' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[Basic]' role='dimension' type='ordinal' />
      <column caption='Color scale' datatype='string' name='[Calculation_1003176846772572160]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([Missing])=0 THEN &apos;Complete&apos;&#13;&#10;ELSEIF SUM([Missing])=1 THEN &apos;100% Missing&apos;&#13;&#10;ELSEIF SUM([Missing])&gt;0 AND SUM([Missing])&lt;=.01 THEN &apos;1% Missing&apos;&#13;&#10;ELSEIF SUM([Missing])&gt;.01 AND SUM([Missing])&lt;=.05 THEN &apos;1-5% Missing&apos;&#13;&#10;ELSEIF SUM([Missing])&gt;.05 AND SUM([Missing])&lt;=.10 THEN &apos;5-10% Missing&apos;&#13;&#10;ELSEIF SUM([Missing])&gt;.10 AND SUM([Missing])&lt;1 THEN &apos;10-99% Missing&apos;&#13;&#10;END' />
      </column>
      <column caption='Asset2' datatype='real' name='[Calculation_1093248839246712832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Parameters].[Asset selection parameter (copy)] == &quot;refrigerator&quot; then [Calculation_499899588285812736]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;television&quot; then [Calculation_499899588292321283]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;sewingmachine&quot; then [Calculation_499899588295741447]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;washingmachine&quot; then [Calculation_499899588295319557]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;cellphone&quot; then [Calculation_499899588296626184]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;fan&quot; then [Calculation_499899588296753162]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;motorcar&quot; then [Calculation_499899588296683529]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;computer&quot; then [Calculation_499899588296798219]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;electricity&quot; then [Calculation_499899588286152705]&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Missings' datatype='integer' name='[Calculation_1902489396597751808]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='sum([max_N])-sum([N])' />
      </column>
      <column caption='Refrigerator' datatype='real' name='[Calculation_499899588285812736]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Variables]=&quot;refrigerator&quot; Then [Mean] END' />
      </column>
      <column caption='Electricity' datatype='real' name='[Calculation_499899588286152705]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Variables]=&quot;electricity&quot; Then [Mean] END' />
      </column>
      <column caption='Television' datatype='real' name='[Calculation_499899588292321283]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Variables]=&quot;television&quot; Then [Mean] END' />
      </column>
      <column caption='Asset' datatype='real' name='[Calculation_499899588293791748]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1] == &quot;refrigerator&quot; then [Calculation_499899588285812736]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;television&quot; then [Calculation_499899588292321283]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;sewingmachine&quot; then [Calculation_499899588295741447]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;washingmachine&quot; then [Calculation_499899588295319557]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;cellphone&quot; then [Calculation_499899588296626184]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;fan&quot; then [Calculation_499899588296753162]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;motorcar&quot; then [Calculation_499899588296683529]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;computer&quot; then [Calculation_499899588296798219]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;electricity&quot; then [Calculation_499899588286152705]&#13;&#10;else 0&#13;&#10;END' />
      </column>
      <column caption='Washingmachine' datatype='real' name='[Calculation_499899588295319557]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Variables]=&quot;washingmachine&quot; Then [Mean] END' />
      </column>
      <column caption='Sewingmachine' datatype='real' name='[Calculation_499899588295741447]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Variables]=&quot;sewingmachine&quot; Then [Mean] END' />
      </column>
      <column caption='Cellphone' datatype='real' name='[Calculation_499899588296626184]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Variables]=&quot;cellphone&quot; Then [Mean] END' />
      </column>
      <column caption='Motorcar' datatype='real' name='[Calculation_499899588296683529]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Variables]=&quot;motorcar&quot; Then [Mean] END' />
      </column>
      <column caption='Fan' datatype='real' name='[Calculation_499899588296753162]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Variables]=&quot;fan&quot; Then [Mean] END' />
      </column>
      <column caption='Computer' datatype='real' name='[Calculation_499899588296798219]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Variables]=&quot;computer&quot; Then [Mean] END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Country Year' datatype='string' name='[Country_Year]' role='dimension' semantic-role='' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[Missing]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[N]' role='measure' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Variables]' role='dimension' type='nominal' />
      <column caption='max N' datatype='integer' name='[max_N]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Variables]' derivation='None' name='[none:Variables:nk]' pivot='key' type='nominal' />
      <column-instance column='[Available]' derivation='Sum' name='[sum:Available:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1003176846772572160]' derivation='User' name='[usr:Calculation_1003176846772572160:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.309278' measure-ordering='alphabetic' measure-percentage='0.634021' parameter-percentage='0.056701' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[sum:Available:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>22</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2422</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>26</bucket>
            </map>
            <map to='#5c6068'>
              <bucket>1</bucket>
            </map>
            <map to='#79706e'>
              <bucket>13</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>27</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>19</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>23</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>17</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>14</bucket>
            </map>
            <map to='#d37295'>
              <bucket>15</bucket>
            </map>
            <map to='#d3d3d3'>
              <bucket>0</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>18</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>20</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>24</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>16</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>25</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Variables:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;computer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;eqadult&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;industry_orig_2&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;occup&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;pline_125&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;relationharm&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;toilet_jmp&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;welfarenat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;age&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;edulevel1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;idp&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;marital&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;pcc_nat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;quintile_cons_aggregate&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;subnatid1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;water_orig&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ccode&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;empstat_2&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;industry_2&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;njobs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;pipedwater_acc&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;refrigerator&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;television&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;weight&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;cpiperiod&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;firmsize_l&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;lamp&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;occup_orig&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;poor_10_nat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;sar_improved_water&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;urban&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;welfaretype&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;countrycode&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;everattend&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;int_month&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;occup_2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;pline_int&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sanitation_original&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;toilet_orig&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;welfarenom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;cellphone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;empstat_2_year&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;industry_e&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;njobs_year&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;pline_7_nat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;reg01&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;tenure&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;weighttype&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;educat7&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;hsize&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;lstatus_year&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;pcc_d_nat&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;ppp&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;strata&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;water&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;atschool&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;edulevel2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;improved_sanitation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;motorcar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;pci_d_i2d2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;radio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;subnatid2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;water_original&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;educat4&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;hhsize_i2d2&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;literacy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;pcc_d_125&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;poor_nat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;soc&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;wage_2&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;whours&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;chicken&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;empstat_e&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;industry_e_orig&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;nlfreason&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;pline_10_nat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;reg02&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;toilet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;welfare&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;datalevel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;firmsize_u&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;landholding&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ocusec&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;poor_15_nat&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;sector&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;veralt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;welfshprosperity&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;decile_cons_aggregate&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;food_share&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;landphone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ownhouse&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;poor_125&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;sewage_toilet&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;vermast&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;wgt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;educat5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;hhsize_nat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;lstatus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pcc_d_i2d2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;pop_wgt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;spdef&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;washingmachine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;year&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;educy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;idh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;male&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;pcc_i2d2&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;psu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;subnatid0&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;water_jmp&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;cow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;fan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;int_year&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;occup_e&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;pline_nat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;sanitation_source&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;unitwage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;welfareother&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;code&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;empstat_year&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;industry_orig&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;numoccup&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;pline_15_nat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;relationcs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;toilet_acc&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;welfaredef&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;bicycle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;electricity&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;improved_water&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;motorcycle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;pci_i2d2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;rbirth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;subnatid3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;water_source&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ed_mod_age&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;head&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;lb_mod_age&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;pcc_125&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;poor_int&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;sewingmachine&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;wage&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;wgt_wdi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;cpi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;fieldwork&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;internet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;occup_e_orig&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;poor_7_nat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;sar_improved_toilet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;unitwage_2&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;welfareothertype&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;buffalo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;empstat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;industry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;nfood_share&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;piped_water&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;rbirth_juris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;survey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;watertype_quest&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Country:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1003176846772572160:nk]' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;Green&quot;</bucket>
            </map>
            <map to='#184829'>
              <bucket>&quot;Complete&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;LIGHT BLUE&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;10-99\% Missing&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;DARK RED&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;GRAY&quot;</bucket>
            </map>
            <map to='#ee7422'>
              <bucket>&quot;5-10\% Missing&quot;</bucket>
            </map>
            <map to='#f0bd27'>
              <bucket>&quot;1\% Missing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1-5\% Missing&quot;</bucket>
            </map>
            <map to='#f4f4f4'>
              <bucket>&quot;100\% Missing&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;LIGHT RED&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Asset selection parameter 2' datatype='string' name='[Asset selection parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;electricity&quot;'>
          <calculation class='tableau' formula='&quot;electricity&quot;' />
        </column>
        <column caption='Asset selection parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;refrigerator&quot;'>
          <calculation class='tableau' formula='&quot;refrigerator&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sheet1 (sar_welfare_distribution)' inline='true' name='federated.06jc1zv1uzz42b104lyx80yd1xvw' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='sar_welfare_distribution' name='excel-direct.12850kl1os4jud1fuhxv30il6n2e'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/WB459082/Desktop/SAR_MNA_Summary/sar_welfare_distribution.xls' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.12850kl1os4jud1fuhxv30il6n2e' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:F1601:no:A1:F1601:0' header='yes' outcome='2'>
            <column datatype='string' name='country_year' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='year' ordinal='2' />
            <column datatype='real' name='newvard' ordinal='3' />
            <column datatype='real' name='newvarx' ordinal='4' />
            <column datatype='real' name='exp_perc' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F1601:no:A1:F1601:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_year</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>country_year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>newvard</remote-name>
            <remote-type>5</remote-type>
            <local-name>[newvard]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>newvard</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>newvarx</remote-name>
            <remote-type>5</remote-type>
            <local-name>[newvarx]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>newvarx</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>exp_perc</remote-name>
            <remote-type>5</remote-type>
            <local-name>[exp_perc]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>exp_perc</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Newvard (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-2' formula='[newvard]' peg='0' size='0.0272' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Year' datatype='string' name='[country_year]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Newvard' datatype='real' name='[newvard]' role='measure' type='quantitative' />
      <column caption='Newvarx' datatype='real' name='[newvarx]' role='measure' type='quantitative' />
      <column caption='Year' datatype='date' default-format='*yyyy' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[newvard]' derivation='Attribute' name='[attr:newvard:qk]' pivot='key' type='quantitative' />
      <column-instance column='[newvarx]' derivation='Attribute' name='[attr:newvarx:qk]' pivot='key' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[newvard]' derivation='None' name='[none:newvard:qk]' pivot='key' type='quantitative' />
      <column-instance column='[newvarx]' derivation='None' name='[none:newvarx:qk]' pivot='key' type='quantitative' />
      <column-instance column='[newvard]' derivation='Sum' name='[sum:newvard:qk]' pivot='key' type='quantitative' />
      <column-instance column='[newvarx]' derivation='Sum' name='[sum:newvarx:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.344072' measure-ordering='alphabetic' measure-percentage='0.398196' parameter-percentage='0.257732' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:newvard:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:newvard:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.06jc1zv1uzz42b104lyx80yd1xvw].[sum:newvard:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:newvarx:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:newvarx:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.06jc1zv1uzz42b104lyx80yd1xvw].[sum:newvarx:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;AFG&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LKA&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;IND&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NPL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BTN&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;MDV&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BGD&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;PAK&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Lines'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[federated.0j413uu042entj1d8lxvt01prq5u].[none:varlab:nk]</run>
            <run>&gt;: &lt;</run>
            <run>[federated.0j413uu042entj1d8lxvt01prq5u].[none:desc:nk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
          </datasources>
          <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
            <column aggregation='Sum' datatype='integer' name='[Basic]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='real' name='[Mean]' role='measure' type='quantitative' />
            <column datatype='real' name='[SD]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Variables]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='measure' type='quantitative' />
            <column-instance column='[v2filter]' derivation='Attribute' name='[attr:v2filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mean]' derivation='Avg' name='[avg:Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SD]' derivation='Avg' name='[avg:SD:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[desc]' role='dimension' type='nominal' />
            <column-instance column='[Basic]' derivation='None' name='[none:Basic:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Variables]' derivation='None' name='[none:Variables:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[desc]' derivation='None' name='[none:desc:nk]' pivot='key' type='nominal' />
            <column-instance column='[v2filter]' derivation='None' name='[none:v2filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[varlab]' derivation='None' name='[none:varlab:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[v2filter]' role='dimension' type='nominal' />
            <column datatype='string' name='[varlab]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Basic:ok]'>
            <groupfilter function='member' level='[none:Basic:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Assets&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]'>
            <groupfilter function='member' level='[none:Variables:nk]' member='&quot;refrigerator&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:v2filter:nk]'>
            <groupfilter function='level-members' level='[none:v2filter:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Basic:ok]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:v2filter:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' value='106' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' value='Please select a variable from the dropdown menu:' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' />
              <lod column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:desc:nk]' />
              <lod column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:varlab:nk]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[attr:v2filter:nk]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:SD:qk]' />
              <text column='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>desc:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:desc:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>varlab:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:varlab:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>v2filter:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[attr:v2filter:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Mean:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Standard Deviation:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[avg:SD:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]</rows>
        <cols>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Miss'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
          </datasources>
          <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
            <column datatype='integer' name='[Available]' role='measure' type='ordinal' />
            <column caption='Missings' datatype='integer' name='[Calculation_1902489396597751808]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='sum([max_N])-sum([N])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='integer' name='[Dictionary]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mean]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[Missing]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[N]' role='measure' type='ordinal' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Variables]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='measure' type='quantitative' />
            <column-instance column='[v2filter]' derivation='Attribute' name='[attr:v2filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Missing]' derivation='Avg' name='[avg:Missing:qk]' pivot='key' type='quantitative' />
            <column caption='max N' datatype='integer' name='[max_N]' role='measure' type='quantitative' />
            <column-instance column='[Available]' derivation='None' name='[none:Available:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Dictionary]' derivation='None' name='[none:Dictionary:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Missing]' derivation='None' name='[none:Missing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Variables]' derivation='None' name='[none:Variables:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[v2filter]' derivation='None' name='[none:v2filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mean]' derivation='Sum' name='[sum:Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[N]' derivation='Sum' name='[sum:N:qk]' pivot='key' type='quantitative' />
            <column-instance column='[max_N]' derivation='Sum' name='[sum:max_N:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1902489396597751808]' derivation='User' name='[usr:Calculation_1902489396597751808:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[v2filter]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Available:ok]'>
            <groupfilter function='level-members' level='[none:Available:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Demographic&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Dictionary:ok]'>
            <groupfilter function='level-members' level='[none:Dictionary:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]'>
            <groupfilter function='level-members' level='[none:Variables:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' direction='ASC' using='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Missing:qk]' />
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:v2filter:nk]'>
            <groupfilter function='level-members' level='[none:v2filter:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Available:ok]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:v2filter:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Dictionary:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Missing:qk]' value='p0%' />
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' value='132' />
            <format attr='height' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]' value='52' />
            <format attr='height' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' value='41' />
            <format attr='width' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]' value='-90' />
            <format attr='text-orientation' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' value='-90' />
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:qk]' value='p0.0000%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Missing:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:qk]' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cce2cc</color>
                <color>#aad4aa</color>
                <color>#8bc68b</color>
                <color>#6eb86e</color>
                <color>#55aa55</color>
                <color>#3e9c3e</color>
                <color>#2a8e2a</color>
                <color>#198019</color>
                <color>#0b720b</color>
                <color>#006400</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:qk]' value='Percentage of missing values' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:qk]' />
              <lod column='[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1902489396597751808:qk]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[sum:N:qk]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[sum:Mean:qk]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[attr:v2filter:nk]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[sum:max_N:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Category:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Missing:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Type:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Variables:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]&gt; (&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[attr:v2filter:nk]&gt;)</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[sum:Mean:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>N:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[sum:N:qk]&gt; of &lt;[federated.0j413uu042entj1d8lxvt01prq5u].[sum:max_N:qk]&gt; (&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1902489396597751808:qk]&gt; missing)</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk] / [federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk])</rows>
        <cols>([federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk] / [federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Miss (2)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
          </datasources>
          <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
            <column caption='Color scale' datatype='string' name='[Calculation_1003176846772572160]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Missing])=0 THEN &apos;Complete&apos;&#13;&#10;ELSEIF SUM([Missing])=1 THEN &apos;100% Missing&apos;&#13;&#10;ELSEIF SUM([Missing])&gt;0 AND SUM([Missing])&lt;=.01 THEN &apos;1% Missing&apos;&#13;&#10;ELSEIF SUM([Missing])&gt;.01 AND SUM([Missing])&lt;=.05 THEN &apos;1-5% Missing&apos;&#13;&#10;ELSEIF SUM([Missing])&gt;.05 AND SUM([Missing])&lt;=.10 THEN &apos;5-10% Missing&apos;&#13;&#10;ELSEIF SUM([Missing])&gt;.10 AND SUM([Missing])&lt;1 THEN &apos;10-99% Missing&apos;&#13;&#10;END' />
            </column>
            <column caption='Missings' datatype='integer' name='[Calculation_1902489396597751808]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='sum([max_N])-sum([N])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='real' name='[Mean]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[Missing]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[N]' role='measure' type='ordinal' />
            <column datatype='real' name='[SD]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Variables]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='measure' type='quantitative' />
            <column-instance column='[v2filter]' derivation='Attribute' name='[attr:v2filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mean]' derivation='Avg' name='[avg:Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Missing]' derivation='Avg' name='[avg:Missing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SD]' derivation='Avg' name='[avg:SD:qk]' pivot='key' type='quantitative' />
            <column caption='max N' datatype='integer' name='[max_N]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Missing]' derivation='None' name='[none:Missing:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Variables]' derivation='None' name='[none:Variables:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[v2filter]' derivation='None' name='[none:v2filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[N]' derivation='Sum' name='[sum:N:ok]' pivot='key' type='ordinal' />
            <column-instance column='[max_N]' derivation='Sum' name='[sum:max_N:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1003176846772572160]' derivation='User' name='[usr:Calculation_1003176846772572160:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1902489396597751808]' derivation='User' name='[usr:Calculation_1902489396597751808:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[v2filter]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[attr:v2filter:nk]'>
            <groupfilter function='level-members' level='[attr:v2filter:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Demographic&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' />
          </filter>
          <sort class='manual' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;AFG&quot;</bucket>
              <bucket>&quot;BGD&quot;</bucket>
              <bucket>&quot;BTN&quot;</bucket>
              <bucket>&quot;IND&quot;</bucket>
              <bucket>&quot;MDV&quot;</bucket>
              <bucket>&quot;NPL&quot;</bucket>
              <bucket>&quot;PAK&quot;</bucket>
              <bucket>&quot;LKA&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]'>
            <groupfilter function='level-members' level='[none:Variables:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' direction='ASC' using='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Missing:qk]' />
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:v2filter:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:v2filter:nk]' member='&quot;Not v2&quot;' />
              <groupfilter function='member' level='[none:v2filter:nk]' member='&quot;v2&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1003176846772572160:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;100\% Missing&quot;</bucket>
              <bucket>&quot;10-99\% Missing&quot;</bucket>
              <bucket>&quot;5-10\% Missing&quot;</bucket>
              <bucket>&quot;1-5\% Missing&quot;</bucket>
              <bucket>&quot;1\% Missing&quot;</bucket>
              <bucket>&quot;Complete&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:v2filter:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[attr:v2filter:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Missing:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' value='132' />
            <format attr='height' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]' value='52' />
            <format attr='height' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' value='41' />
            <format attr='width' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]' value='80' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]' value='-90' />
            <format attr='text-orientation' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' value='-90' />
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:ok]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Missing:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1003176846772572160:nk]' />
              <lod column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:ok]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[attr:v2filter:nk]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[sum:max_N:qk]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[sum:N:ok]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1902489396597751808:ok]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:SD:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]&gt; &lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Variable:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]&gt; (&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[attr:v2filter:nk]&gt;)</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Type:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]&gt; </run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Standard Deviation:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[avg:SD:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Available:&#9;</run>
                <run bold='true'> &lt;[federated.0j413uu042entj1d8lxvt01prq5u].[sum:N:ok]&gt; of &lt;[federated.0j413uu042entj1d8lxvt01prq5u].[sum:max_N:qk]&gt;  (&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1902489396597751808:ok]&gt; missing)</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Missing (decimal):&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:ok]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk] / [federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk])</rows>
        <cols>([federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk] / [federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Note 3'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
          </datasources>
          <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
            <column caption='Color scale' datatype='string' name='[Calculation_1003176846772572160]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([Missing])=0 THEN &apos;Complete&apos;&#13;&#10;ELSEIF SUM([Missing])=1 THEN &apos;100% Missing&apos;&#13;&#10;ELSEIF SUM([Missing])&gt;0 AND SUM([Missing])&lt;=.01 THEN &apos;1% Missing&apos;&#13;&#10;ELSEIF SUM([Missing])&gt;.01 AND SUM([Missing])&lt;=.05 THEN &apos;1-5% Missing&apos;&#13;&#10;ELSEIF SUM([Missing])&gt;.05 AND SUM([Missing])&lt;=.10 THEN &apos;5-10% Missing&apos;&#13;&#10;ELSEIF SUM([Missing])&gt;.10 AND SUM([Missing])&lt;1 THEN &apos;10-99% Missing&apos;&#13;&#10;END' />
            </column>
            <column caption='Missings' datatype='integer' name='[Calculation_1902489396597751808]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='sum([max_N])-sum([N])' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='real' name='[Mean]' role='measure' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[Missing]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[N]' role='measure' type='ordinal' />
            <column datatype='real' name='[SD]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Variables]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='measure' type='quantitative' />
            <column-instance column='[v2filter]' derivation='Attribute' name='[attr:v2filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mean]' derivation='Avg' name='[avg:Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Missing]' derivation='Avg' name='[avg:Missing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SD]' derivation='Avg' name='[avg:SD:qk]' pivot='key' type='quantitative' />
            <column caption='max N' datatype='integer' name='[max_N]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Missing]' derivation='None' name='[none:Missing:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Variables]' derivation='None' name='[none:Variables:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[v2filter]' derivation='None' name='[none:v2filter:nk]' pivot='key' type='nominal' />
            <column-instance column='[N]' derivation='Sum' name='[sum:N:ok]' pivot='key' type='ordinal' />
            <column-instance column='[max_N]' derivation='Sum' name='[sum:max_N:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1003176846772572160]' derivation='User' name='[usr:Calculation_1003176846772572160:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1902489396597751808]' derivation='User' name='[usr:Calculation_1902489396597751808:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[v2filter]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[attr:v2filter:nk]'>
            <groupfilter function='level-members' level='[attr:v2filter:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Assets&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Basic&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Demographic&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Education&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;House&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Labor&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Other&quot;' />
              <groupfilter function='member' level='[none:Category:nk]' member='&quot;Welfare&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' />
          </filter>
          <sort class='manual' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;AFG&quot;</bucket>
              <bucket>&quot;BGD&quot;</bucket>
              <bucket>&quot;BTN&quot;</bucket>
              <bucket>&quot;IND&quot;</bucket>
              <bucket>&quot;MDV&quot;</bucket>
              <bucket>&quot;NPL&quot;</bucket>
              <bucket>&quot;PAK&quot;</bucket>
              <bucket>&quot;LKA&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]'>
            <groupfilter function='level-members' level='[none:Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;age&quot;' />
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;cpi&quot;' />
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;electricity&quot;' />
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;hsize&quot;' />
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;male&quot;' />
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;ownhouse&quot;' />
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;poor_int&quot;' />
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;pop_wgt&quot;' />
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;ppp&quot;' />
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;psu&quot;' />
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;relationharm&quot;' />
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;strata&quot;' />
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;subnatid1&quot;' />
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;urban&quot;' />
              <groupfilter function='member' level='[none:Variables:nk]' member='&quot;welfare&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' direction='ASC' using='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Missing:qk]' />
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]'>
            <groupfilter function='level-members' level='[none:Year:ok]' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:v2filter:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:v2filter:nk]' member='&quot;Not v2&quot;' />
              <groupfilter function='member' level='[none:v2filter:nk]' member='&quot;v2&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1003176846772572160:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;100\% Missing&quot;</bucket>
              <bucket>&quot;10-99\% Missing&quot;</bucket>
              <bucket>&quot;5-10\% Missing&quot;</bucket>
              <bucket>&quot;1-5\% Missing&quot;</bucket>
              <bucket>&quot;1\% Missing&quot;</bucket>
              <bucket>&quot;Complete&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:v2filter:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[attr:v2filter:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Missing:qk]' value='p0%' />
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' value='n#,##0.000;-#,##0.000' />
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:SD:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1902489396597751808:ok]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' value='132' />
            <format attr='height' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]' value='52' />
            <format attr='height' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' value='41' />
            <format attr='width' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]' value='96' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]' value='-90' />
            <format attr='text-orientation' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' value='-90' />
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' value='N' />
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:ok]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Missing:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1003176846772572160:nk]' />
              <lod column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:ok]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[attr:v2filter:nk]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[sum:max_N:qk]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[sum:N:ok]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1902489396597751808:ok]' />
              <tooltip column='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:SD:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]&gt; &lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Variable:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]&gt; (&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[attr:v2filter:nk]&gt;)</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]&gt; </run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Standard Deviation:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[avg:SD:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Available:&#9;</run>
                <run bold='true'> &lt;[federated.0j413uu042entj1d8lxvt01prq5u].[sum:N:ok]&gt; of &lt;[federated.0j413uu042entj1d8lxvt01prq5u].[sum:max_N:qk]&gt;  (&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1902489396597751808:ok]&gt; missing)</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Missing (decimal):&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:ok]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk] / [federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk])</rows>
        <cols>([federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk] / [federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sample Size'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
        <caption>
          <formatted-text>
            <run>Color shows country.  Size shows number of surveyed individuals. The marks are labeled by country and year.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
          </datasources>
          <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='integer' name='[Year]' role='measure' type='quantitative' />
            <column-instance column='[max_N]' derivation='Avg' name='[avg:max_N:qk]' pivot='key' type='quantitative' />
            <column caption='max N' datatype='integer' name='[max_N]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:max_N:qk]' />
              <text column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' />
              <text column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:qk]' />
              <color column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>N:&#9;</run>
                <run bold='true'>&lt;[federated.0j413uu042entj1d8lxvt01prq5u].[avg:max_N:qk]&gt; individuals</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Scatters'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Energy-using asset ownership</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Asset selection parameter 2' datatype='string' name='[Asset selection parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;electricity&quot;'>
              <calculation class='tableau' formula='&quot;electricity&quot;' />
            </column>
            <column caption='Asset selection parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;refrigerator&quot;'>
              <calculation class='tableau' formula='&quot;refrigerator&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
            <column caption='Asset2' datatype='real' name='[Calculation_1093248839246712832]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Asset selection parameter (copy)] == &quot;refrigerator&quot; then [Calculation_499899588285812736]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;television&quot; then [Calculation_499899588292321283]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;sewingmachine&quot; then [Calculation_499899588295741447]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;washingmachine&quot; then [Calculation_499899588295319557]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;cellphone&quot; then [Calculation_499899588296626184]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;fan&quot; then [Calculation_499899588296753162]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;motorcar&quot; then [Calculation_499899588296683529]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;computer&quot; then [Calculation_499899588296798219]&#13;&#10;elseif [Parameters].[Asset selection parameter (copy)] == &quot;electricity&quot; then [Calculation_499899588286152705]&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Refrigerator' datatype='real' name='[Calculation_499899588285812736]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Variables]=&quot;refrigerator&quot; Then [Mean] END' />
            </column>
            <column caption='Electricity' datatype='real' name='[Calculation_499899588286152705]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Variables]=&quot;electricity&quot; Then [Mean] END' />
            </column>
            <column caption='Television' datatype='real' name='[Calculation_499899588292321283]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Variables]=&quot;television&quot; Then [Mean] END' />
            </column>
            <column caption='Asset' datatype='real' name='[Calculation_499899588293791748]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Parameters].[Parameter 1] == &quot;refrigerator&quot; then [Calculation_499899588285812736]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;television&quot; then [Calculation_499899588292321283]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;sewingmachine&quot; then [Calculation_499899588295741447]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;washingmachine&quot; then [Calculation_499899588295319557]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;cellphone&quot; then [Calculation_499899588296626184]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;fan&quot; then [Calculation_499899588296753162]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;motorcar&quot; then [Calculation_499899588296683529]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;computer&quot; then [Calculation_499899588296798219]&#13;&#10;elseif [Parameters].[Parameter 1] == &quot;electricity&quot; then [Calculation_499899588286152705]&#13;&#10;else 0&#13;&#10;END' />
            </column>
            <column caption='Washingmachine' datatype='real' name='[Calculation_499899588295319557]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Variables]=&quot;washingmachine&quot; Then [Mean] END' />
            </column>
            <column caption='Sewingmachine' datatype='real' name='[Calculation_499899588295741447]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Variables]=&quot;sewingmachine&quot; Then [Mean] END' />
            </column>
            <column caption='Cellphone' datatype='real' name='[Calculation_499899588296626184]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Variables]=&quot;cellphone&quot; Then [Mean] END' />
            </column>
            <column caption='Motorcar' datatype='real' name='[Calculation_499899588296683529]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Variables]=&quot;motorcar&quot; Then [Mean] END' />
            </column>
            <column caption='Fan' datatype='real' name='[Calculation_499899588296753162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Variables]=&quot;fan&quot; Then [Mean] END' />
            </column>
            <column caption='Computer' datatype='real' name='[Calculation_499899588296798219]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Variables]=&quot;computer&quot; Then [Mean] END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Country Year' datatype='string' name='[Country_Year]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='real' name='[Mean]' role='measure' type='quantitative' />
            <column datatype='string' name='[Variables]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1093248839246712832]' derivation='Avg' name='[avg:Calculation_1093248839246712832:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_499899588293791748]' derivation='Avg' name='[avg:Calculation_499899588293791748:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Year]' derivation='None' name='[none:Country_Year:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Calculation_499899588293791748:qk]' scope='rows' value='Access (% of households)' />
            <format attr='subtitle' class='0' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Calculation_499899588293791748:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Calculation_499899588293791748:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Calculation_1093248839246712832:qk]' scope='cols' value='Access (% of households)' />
            <format attr='subtitle' class='0' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Calculation_1093248839246712832:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Calculation_1093248839246712832:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Calculation_499899588293791748:qk]' value='p0%' />
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Calculation_1093248839246712832:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' />
              <text column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country_Year:nk]' />
              <lod column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country_Year:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp'>
              <excluded-factors>
                <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</column>
              </excluded-factors>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.84558010101318359' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Calculation_499899588293791748:qk]</rows>
        <cols>[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Calculation_1093248839246712832:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
          </datasources>
          <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='integer' name='[Year]' role='measure' type='quantitative' />
            <column-instance column='[max_W]' derivation='Avg' name='[avg:max_W:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[max_W]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j413uu042entj1d8lxvt01prq5u].[avg:max_W:qk]</rows>
        <cols>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 7 (2)'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
          </datasources>
          <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Country Year' datatype='string' name='[Country_Year]' role='dimension' semantic-role='' type='nominal' />
            <column datatype='real' name='[Mean]' role='measure' type='quantitative' />
            <column datatype='string' name='[Variables]' role='dimension' type='nominal' />
            <column-instance column='[Mean]' derivation='Avg' name='[avg:Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_Year]' derivation='None' name='[none:Country_Year:nk]' pivot='key' type='nominal' />
            <column-instance column='[Variables]' derivation='None' name='[none:Variables:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Assets&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]'>
            <groupfilter function='level-members' level='[none:Variables:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' direction='DESC' using='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' />
          <slices>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</column>
            <column>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' scope='cols' value='Percentage of households with access to asset' />
            <format attr='subtitle' class='0' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' value='p0%' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' />
              <lod column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' />
              <lod column='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country_Year:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.51574587821960449' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]</rows>
        <cols>[federated.0j413uu042entj1d8lxvt01prq5u].[avg:Mean:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='dist'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Daily expenditure per person in 2011 USD (PPP) (ln scale)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (sar_welfare_distribution)' name='federated.06jc1zv1uzz42b104lyx80yd1xvw' />
          </datasources>
          <datasource-dependencies datasource='federated.06jc1zv1uzz42b104lyx80yd1xvw'>
            <column-instance column='[newvard]' derivation='Attribute' name='[attr:newvard:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Year' datatype='string' name='[country_year]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[exp_perc]' role='measure' type='quantitative' />
            <column caption='Newvard' datatype='real' name='[newvard]' role='measure' type='quantitative' />
            <column caption='Newvarx' datatype='real' name='[newvarx]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_year]' derivation='None' name='[none:country_year:nk]' pivot='key' type='nominal' />
            <column-instance column='[exp_perc]' derivation='None' name='[none:exp_perc:qk]' pivot='key' type='quantitative' />
            <column-instance column='[newvarx]' derivation='None' name='[none:newvarx:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='date' default-format='*yyyy' name='[year]' role='dimension' type='ordinal' />
            <column-instance column='[year]' derivation='Year' name='[yr:year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:newvard:qk]' included-values='in-range-or-null'>
            <min>0.048000000000000001</min>
            <max>0.99347782985926958</max>
          </filter>
          <filter class='quantitative' column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:year:qk]' included-values='in-range-or-null'>
            <min>#1993-01-01#</min>
            <max>#2017-01-01#</max>
          </filter>
          <filter class='categorical' column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;BGD&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;AFG&quot;</bucket>
              <bucket>&quot;BGD&quot;</bucket>
              <bucket>&quot;BTN&quot;</bucket>
              <bucket>&quot;IND&quot;</bucket>
              <bucket>&quot;MDV&quot;</bucket>
              <bucket>&quot;NPL&quot;</bucket>
              <bucket>&quot;PAK&quot;</bucket>
              <bucket>&quot;LKA&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country_year:nk]'>
            <groupfilter function='level-members' level='[none:country_year:nk]' />
          </filter>
          <sort class='alphabetic' column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country_year:nk]' direction='DESC' />
          <filter class='quantitative' column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' included-values='in-range-or-null'>
            <min>0.0069987722672521999</min>
            <max>1273.30908203125</max>
          </filter>
          <filter class='quantitative' column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:newvarx:qk]' included-values='in-range-or-null'>
            <min>-4.9620205664076353</min>
            <max>7.1493743266348684</max>
          </filter>
          <slices>
            <column>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country:nk]</column>
            <column>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country_year:nk]</column>
            <column>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:newvarx:qk]</column>
            <column>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:newvard:qk]</column>
            <column>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]</column>
            <column>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:newvard:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:newvard:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:newvard:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:newvard:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:year:qk]' value='N' />
            <format attr='text-format' field='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:newvarx:qk]' value='*' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:year:qk]' num-steps='12' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='fill-above' id='refline5' value='#00000000' />
            <format attr='fill-below' id='refline5' value='#00000000' />
            <format attr='fill-above' id='refline6' value='#00000000' />
            <format attr='fill-below' id='refline6' value='#00000000' />
            <format attr='fill-above' id='refline7' value='#00000000' />
            <format attr='fill-below' id='refline7' value='#00000000' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='fill-color' id='refline3' value='#f6eee3' />
            <format attr='fill-color' id='refline8' value='#f6eee3' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:newvard:qk]' value='Modify Y-axis' />
            <format attr='title' field='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:newvarx:qk]' value='Modify X-axis' />
            <format attr='title' field='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country_year:nk]' value='Country and Year' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Use arrows to see the movement of the distribution over time:'>
              <formatted-text>
                <run>Use arrows to see the movement of the distribution over time:</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:year:qk]' />
              <text column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country_year:nk]' />
              <lod column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country_year:nk]' />
            </encodings>
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='true' />
            <reference-line axis-column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' enable-instant-analytics='true' formula='constant' id='refline5' label-type='automatic' scope='per-pane' value='1.8999999999999999' value-column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' z-order='1' />
            <reference-line axis-column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' enable-instant-analytics='true' formula='constant' id='refline6' label-type='automatic' scope='per-pane' value='3.2000000000000002' value-column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' z-order='2' />
            <reference-line axis-column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' enable-instant-analytics='true' formula='constant' id='refline7' label-type='automatic' scope='per-pane' value='5.5' value-column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' z-order='3' />
            <reference-line axis-column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' enable-instant-analytics='true' formula='min' id='refline8' label-type='automatic' paired-id='refline9' scope='per-pane' symmetric='false' value-column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' z-order='4' />
            <reference-line axis-column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' enable-instant-analytics='true' formula='constant' id='refline9' label-type='automatic' paired-id='refline8' scope='per-pane' symmetric='false' value='1.8999999999999999' value-column='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]' z-order='4' />
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country_year:nk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='text-orientation' value='0' />
                <format attr='wrap' value='auto' />
                <format attr='text-align' value='right' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='18' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country:nk] * [federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:newvard:qk])</rows>
        <cols>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:exp_perc:qk]</cols>
        <pages>
          <column>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[yr:year:ok]</column>
        </pages>
        <show-full-range>
          <column>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[Newvard (bin)]</column>
        </show-full-range>
        <page-trail-options enabled='true' mark-type='all' />
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Assets'>
      <style />
      <size maxheight='800' maxwidth='700' minheight='800' minwidth='700' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
      </datasources>
      <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
        <column datatype='string' name='[Variables]' role='dimension' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Variables]' derivation='None' name='[none:Variables:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='13' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
            <zone h='98000' id='10' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
              <zone h='98000' id='8' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                <zone h='98000' id='5' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                  <zone h='98000' id='3' type='layout-basic' w='97714' x='1143' y='1000'>
                    <zone h='81500' id='1' name='Sheet 7 (2)' w='97714' x='1143' y='7000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='10500' id='6' leg-item-layout='grid' name='Sheet 7 (2)' pane-specification-id='0' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' type='shape' w='97714' x='1143' y='88500'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='6000' id='11' mode='checkdropdown' name='Sheet 7 (2)' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' type='filter' values='relevant' w='50645' x='1143' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='6000' id='14' mode='checkdropdown' name='Sheet 7 (2)' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' type='filter' w='47069' x='51788' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Cover'>
      <style />
      <size maxheight='800' maxwidth='700' minheight='800' minwidth='700' sizing-mode='fixed' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='97714' x='1143' y='1000'>
              <zone h='98000' id='1' name='Sample Size' show-caption='true' w='97714' x='1143' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Distribution'>
      <style />
      <size maxheight='800' maxwidth='700' minheight='800' minwidth='700' preset-index='2' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (sar_welfare_distribution)' name='federated.06jc1zv1uzz42b104lyx80yd1xvw' />
      </datasources>
      <datasource-dependencies datasource='federated.06jc1zv1uzz42b104lyx80yd1xvw'>
        <column-instance column='[newvard]' derivation='Attribute' name='[attr:newvard:qk]' pivot='key' type='quantitative' />
        <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
        <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Country Year' datatype='string' name='[country_year]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Newvard' datatype='real' name='[newvard]' role='measure' type='quantitative' />
        <column caption='Newvarx' datatype='real' name='[newvarx]' role='measure' type='quantitative' />
        <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
        <column-instance column='[country_year]' derivation='None' name='[none:country_year:nk]' pivot='key' type='nominal' />
        <column-instance column='[newvarx]' derivation='None' name='[none:newvarx:qk]' pivot='key' type='quantitative' />
        <column caption='Year' datatype='date' default-format='*yyyy' name='[year]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='30' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
            <zone h='98000' id='28' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
              <zone h='98000' id='25' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                <zone h='98000' id='22' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                  <zone h='98000' id='20' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                    <zone h='98000' id='17' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                      <zone h='98000' id='15' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                        <zone h='98000' id='11' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                          <zone h='98000' id='9' type='layout-basic' w='97714' x='1143' y='1000'>
                            <zone h='79625' id='5' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                              <zone h='79625' id='3' type='layout-basic' w='97714' x='1143' y='1000'>
                                <zone h='79625' id='1' name='dist' w='97714' x='1143' y='1000'>
                                  <zone-style>
                                    <format attr='border-color' value='#000000' />
                                    <format attr='border-style' value='none' />
                                    <format attr='border-width' value='0' />
                                    <format attr='margin' value='4' />
                                  </zone-style>
                                </zone>
                              </zone>
                            </zone>
                            <zone h='10001' id='7' mode='checkdropdown' name='dist' param='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country:nk]' type='filter' w='13901' x='1143' y='88999'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='10001' id='8' mode='checkdropdown' name='dist' param='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country_year:nk]' type='filter' values='relevant' w='14267' x='15044' y='88999'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='10001' id='13' name='dist' param='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:newvard:qk]' type='filter' w='22975' x='75882' y='88999'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='10001' id='18' name='dist' param='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:newvarx:qk]' type='filter' w='25882' x='50000' y='88999'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='10001' id='23' name='dist' param='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:year:qk]' type='filter' w='20689' x='29311' y='88999'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='8374' id='6' name='dist' pane-specification-id='2' param='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:year:qk]' single-line='false' type='color' w='46918' x='1143' y='80625'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone dropdown='1' h='8374' id='31' looped='1' name='dist' playctrls='1' slider='0' synchronized='1' trailctrls='0' type='currpage' w='50796' x='48061' y='80625'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Line Chart'>
      <style />
      <size maxheight='800' maxwidth='700' minheight='800' minwidth='700' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
      </datasources>
      <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
        <column datatype='string' name='[Type]' role='dimension' type='nominal' />
        <column datatype='string' name='[Variables]' role='dimension' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Variables]' derivation='None' name='[none:Variables:nk]' pivot='key' type='nominal' />
        <column-instance column='[v2filter]' derivation='None' name='[none:v2filter:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[v2filter]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='21' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
            <zone h='98000' id='18' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
              <zone h='98000' id='16' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                <zone h='98000' id='14' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                  <zone h='98000' id='12' type='layout-basic' w='97714' x='1143' y='1000'>
                    <zone h='70750' id='5' param='horz' type='layout-flow' w='97714' x='1143' y='19125'>
                      <zone h='70750' id='3' type='layout-basic' w='97714' x='1143' y='19125'>
                        <zone h='70750' id='1' name='Lines' w='97714' x='1143' y='19125'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='5375' id='9' mode='checkdropdown' name='Lines' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' type='filter' w='21949' x='1143' y='6375'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='5375' id='8' mode='dropdown' name='Lines' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]' type='filter' w='34652' x='23092' y='6375'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='5375' id='10' mode='dropdown' name='Lines' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]' type='filter' values='relevant' w='22140' x='57744' y='6375'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone forceUpdate='true' h='5375' id='11' type='text' w='97714' x='1143' y='1000'>
                      <formatted-text>
                        <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='14'>SARMD Averages over Time                                                                </run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='9125' id='7' leg-item-layout='grid' name='Lines' pane-specification-id='0' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' type='color' w='97714' x='1143' y='89875'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='7375' id='6' mode='dropdown' name='Lines' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' show-all='false' type='filter' values='relevant' w='97714' x='1143' y='11750'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='5375' id='19' mode='checkdropdown' name='Lines' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:v2filter:nk]' type='filter' w='18973' x='79884' y='6375'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Missing'>
      <style />
      <size maxheight='800' maxwidth='700' minheight='800' minwidth='700' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
      </datasources>
      <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
        <column datatype='string' name='[Type]' role='dimension' type='nominal' />
        <column datatype='string' name='[Variables]' role='dimension' type='nominal' />
        <column-instance column='[v2filter]' derivation='Attribute' name='[attr:v2filter:nk]' pivot='key' type='nominal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Variables]' derivation='None' name='[none:Variables:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[v2filter]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='15' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
            <zone h='98000' id='13' type='layout-basic' w='97714' x='1143' y='1000'>
              <zone h='94000' id='5' param='horz' type='layout-flow' w='97714' x='1143' y='5000'>
                <zone h='94000' id='3' type='layout-basic' w='97714' x='1143' y='5000'>
                  <zone h='79624' id='1' name='Miss (2)' w='97714' x='1143' y='19376'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6250' id='7' mode='checkdropdown' name='Miss (2)' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' type='filter' w='19961' x='1143' y='5000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='8126' id='8' mode='checkdropdown' name='Miss (2)' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]' type='filter' values='relevant' w='17676' x='45928' y='11250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='8126' id='11' mode='dropdown' name='Miss (2)' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]' type='filter' w='19961' x='1143' y='11250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='8126' id='9' mode='checkdropdown' name='Miss (2)' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' type='filter' w='24824' x='21104' y='11250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6250' id='6' leg-item-layout='horz' name='Miss (2)' pane-specification-id='0' param='[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1003176846772572160:nk]' type='color' w='77753' x='21104' y='5000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='8126' id='16' mode='dropdown' name='Miss (2)' param='[federated.0j413uu042entj1d8lxvt01prq5u].[attr:v2filter:nk]' type='filter' w='16981' x='63604' y='11250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='8126' id='17' mode='dropdown' name='Miss (2)' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Dictionary:nk]' type='filter' w='18272' x='80585' y='11250'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone forceUpdate='true' h='4000' id='12' type='text' w='97714' x='1143' y='1000'>
                <formatted-text>
                  <run bold='true' fontcolor='#000000' fontsize='14'>SARMD Availability and Missing Observations               </run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Missing_NC'>
      <style />
      <size maxheight='800' maxwidth='700' minheight='800' minwidth='700' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
      </datasources>
      <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
        <column datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
        <column datatype='string' name='[Type]' role='dimension' type='nominal' />
        <column datatype='string' name='[Variables]' role='dimension' type='nominal' />
        <column datatype='integer' name='[Year]' role='measure' type='quantitative' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[Variables]' derivation='None' name='[none:Variables:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
        <column-instance column='[v2filter]' derivation='None' name='[none:v2filter:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[v2filter]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='26' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
            <zone h='98000' id='23' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
              <zone h='98000' id='21' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                <zone h='98000' id='18' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                  <zone h='98000' id='16' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                    <zone h='98000' id='12' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
                      <zone h='98000' id='10' type='layout-basic' w='97714' x='1143' y='1000'>
                        <zone h='86250' id='5' param='horz' type='layout-flow' w='97714' x='1143' y='12750'>
                          <zone h='86250' id='3' type='layout-basic' w='97714' x='1143' y='12750'>
                            <zone h='79649' id='1' name='Miss' w='97714' x='1143' y='19351'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='6601' id='6' mode='dropdown' name='Miss' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]' type='filter' w='21251' x='1143' y='12750'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='6601' id='7' mode='checkdropdown' name='Miss' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' type='filter' values='relevant' w='37338' x='22394' y='12750'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='6601' id='19' mode='checkdropdown' name='Miss' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]' type='filter' values='relevant' w='20152' x='59732' y='12750'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='6601' id='24' mode='dropdown' name='Miss' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:v2filter:nk]' type='filter' w='9539' x='79884' y='12750'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='6601' id='27' mode='checkdropdown' name='Miss' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Dictionary:nk]' type='filter' values='relevant' w='9434' x='89423' y='12750'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                        <zone forceUpdate='true' h='4000' id='9' type='text' w='97714' x='1143' y='1000'>
                          <formatted-text>
                            <run bold='true' fontcolor='#000000' fontsize='14'>SARMD Availability and Missing Observations                </run>
                            <run bold='true' fontcolor='#59a14f' fontsize='14'>Note: The Darker the green the less missing values</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='7750' id='13' mode='checkdropdown' name='Miss' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' type='filter' w='33070' x='1143' y='5000'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='7750' id='14' mode='checkdropdown' name='Miss' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]' type='filter' values='relevant' w='25522' x='34213' y='5000'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='7750' id='8' name='Miss' pane-specification-id='0' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:qk]' type='color' w='39122' x='59735' y='5000'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Note 3 Variables'>
      <style />
      <size maxheight='800' maxwidth='700' minheight='800' minwidth='700' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
      </datasources>
      <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
        <column datatype='string' name='[Variables]' role='dimension' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Variables]' derivation='None' name='[none:Variables:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='12' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
            <zone h='98000' id='9' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
              <zone h='98000' id='7' type='layout-basic' w='97714' x='1143' y='1000'>
                <zone h='87375' id='5' param='horz' type='layout-flow' w='97714' x='1143' y='11625'>
                  <zone h='87375' id='3' type='layout-basic' w='97714' x='1143' y='11625'>
                    <zone h='87375' id='1' name='Note 3' w='97714' x='1143' y='11625'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='10625' id='6' name='Note 3' pane-specification-id='0' param='[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1003176846772572160:nk]' type='color' w='54857' x='1143' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10625' id='10' mode='checkdropdown' name='Note 3' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' type='filter' w='22857' x='56000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='10625' id='13' mode='checkdropdown' name='Note 3' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' type='filter' w='20000' x='78857' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Scatter'>
      <style />
      <size maxheight='800' maxwidth='700' minheight='800' minwidth='700' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
      </datasources>
      <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='16' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
            <zone h='98000' id='13' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
              <zone h='98000' id='11' type='layout-basic' w='97714' x='1143' y='1000'>
                <zone h='82375' id='9' param='horz' type='layout-flow' w='97714' x='1143' y='16625'>
                  <zone h='82375' id='7' type='layout-basic' w='97714' x='1143' y='16625'>
                    <zone h='76492' id='5' param='horz' type='layout-flow' w='97714' x='1143' y='16625'>
                      <zone h='76492' id='3' type='layout-basic' w='97714' x='1143' y='16625'>
                        <zone h='76492' id='1' name='Scatters' w='97714' x='1143' y='16625'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='5883' id='6' name='Scatters' pane-specification-id='4' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' type='color' w='97714' x='1143' y='93117'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='15625' id='10' mode='checkdropdown' name='Scatters' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' type='filter' w='32372' x='66485' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='7500' id='14' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='65342' x='1143' y='1000'>
                  <formatted-text>
                    <run>Asset selection parameter (Y-axis)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='8125' id='17' mode='compact' param='[Parameters].[Asset selection parameter (copy)]' type='paramctrl' w='65342' x='1143' y='8500'>
                  <formatted-text>
                    <run>Asset selection parameter (X-axis)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Weights'>
      <style />
      <size maxheight='800' maxwidth='700' minheight='800' minwidth='700' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (Available_Variables)' name='federated.0j413uu042entj1d8lxvt01prq5u' />
      </datasources>
      <datasource-dependencies datasource='federated.0j413uu042entj1d8lxvt01prq5u'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='9' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
            <zone h='98000' id='5' param='horz' type='layout-flow' w='97714' x='1143' y='1000'>
              <zone h='98000' id='3' type='layout-basic' w='97714' x='1143' y='1000'>
                <zone h='80500' id='1' name='Sheet 7' w='97714' x='1143' y='10376'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='8124' id='7' name='Sheet 7' pane-specification-id='0' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' type='color' w='97714' x='1143' y='90876'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='9376' id='6' mode='checkdropdown' name='Sheet 7' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' type='filter' w='97714' x='1143' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='0' id='11' type='text' w='97714' x='1143' y='1000'>
            <formatted-text>
              <run fontalignment='1'>Sum of weights</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='48'>
    <window class='dashboard' name='Cover'>
      <viewpoints>
        <viewpoint name='Sample Size'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Line Chart'>
      <viewpoints>
        <viewpoint name='Lines'>
          <zoom type='fit-height' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Missing'>
      <viewpoints>
        <viewpoint name='Miss (2)'>
          <zoom type='entire-view' />
          <highlight field='[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1003176846772572160:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Scatter'>
      <viewpoints>
        <viewpoint name='Scatters'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Assets'>
      <viewpoints>
        <viewpoint name='Sheet 7 (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Weights'>
      <viewpoints>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Missing_NC'>
      <viewpoints>
        <viewpoint name='Miss'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Distribution'>
      <viewpoints>
        <viewpoint name='dist'>
          <current-page>
            <multibucket>
              <bucket>2016</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' maximized='true' name='Note 3 Variables'>
      <viewpoints>
        <viewpoint name='Note 3'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1003176846772572160:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' hidden='true' name='Lines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Basic:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:desc:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:v2filter:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:varlab:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Miss'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]' type='filter' />
            <card param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' type='filter' values='relevant' />
            <card pane-specification-id='0' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Available:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Dictionary:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:qk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:N:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:v2filter:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1902489396597751808:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Miss (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1003176846772572160:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Available:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Dictionary:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:qk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:N:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:v2filter:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[sum:N:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1003176846772572160:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1902489396597751808:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Note 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1003176846772572160:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Available:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Dictionary:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Missing:qk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:N:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Type:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:v2filter:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[sum:N:ok]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1003176846772572160:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[usr:Calculation_1902489396597751808:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sample Size'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Scatters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country_Year:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Sheet 7 (2)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Category:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Country_Year:nk]</field>
            <field>[federated.0j413uu042entj1d8lxvt01prq5u].[none:Variables:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='dist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:year:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2016</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;PAK&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference>
                <fields>
                  <field>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[yr:year:ok]</field>
                </fields>
                <multibucket>
                  <bucket>2001</bucket>
                </multibucket>
              </page-reference>
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[attr:year:qk]</field>
            <field>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:country_year:nk]</field>
            <field>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[none:year:nk]</field>
            <field>[federated.06jc1zv1uzz42b104lyx80yd1xvw].[yr:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Assets' width='192'>
      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
      AGYZyYGEmsPAAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cover' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Distribution' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Line Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Missing' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Missing_NC' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd3gc1bn/PzOzM9ubVl2W3HvDxo5NMcY2GExCCzfJ/cGlJJDQQggJgYRy
      EyCVkAQIXALc0DsOHRyKDcYFV7lJ2LKs3qVdaXub9vtjbYODEzA2drjaz/Po2dHsnHPeeXe+
      M++Zec8ZwTRNkzx5BiGCIAjikTYiT54jSV4AeQY1eQHkGdT8GwjAIJFIks2k0XRjn/WpVHr3
      skkikdi7TSKR+NytZdNpdGP/3R5dzZDOqP+kXBJ1H/s+DZNUKvU5LPwkhq6RSmUOSV2HE03P
      oh9EF1PVs3zW4rqeRTMO5PfJ8QkBrHzjOa79yU/467Ovgalz76+v48X3tqIm+rn029/kmh/+
      kBWbd/HQXbfx6AvvYGgprr7wHLZ1RLju8ov48Y9+xN/eWrO3vhVLnuWWO//3X5iQ4YOV1Sxd
      /BBb2mMfWz/An/7w2O5ljQ9Wr2HZ4ofY3BZj9Qcrad28lKXVTQe8w68/8Vd29saADJd86xzq
      e2J01Kzggu/fTH9vIzWNnfst17R9A53h9H6/28PODcu4+upr+NkvfkdCTXHnH/5ywPbt0+aG
      t3lvcxvpWC+btu46qLoOBMNI8j/v3UFU1Vi28+19v1RDLGva+E/Lrtn1Kne99xueqH6aNbte
      pTmxf+F29K7nf1bfx+MbHiecze53mxX1b5D+lGO6tvl9ejJpdrUvY3sk9q833g+WT1RY+yFV
      oyexaMEcEsFmxPLpfLjqTU6bfiHu4qGcs2AWqzZuJZuUcbbW0LXLiWH3E89qWP3DuPWX/80v
      bryOU+bNxiVD9fZ2AkaWYDLNA3/6MxedPZuljSahTW+ypaGLm37/e6qrq5lcZQFU7rztxt3r
      b6F2zTtcdvFqvn3db6iuXseUIV4Aqquracx28npNgoGz56H5xxPe9jb/ccV1OJPt3Hr7vYSS
      cP23T+am/3kZsml+dfMP+e3tdxMJhfnF184HDAp9XlatXI810kBVgY10fwe17R5ee/A2BoRC
      rrz4m9x0yx0ce/JZTHR2EvCO5pYfXo7NonLWFT9n9XP3EMuqzDr1Ur65aCpPPv8Wv77jDuqW
      PsVrK2vZtXUV3//eNs665Cqeu/O3+MfM4rtfn8Ht9z2Lv2IMZ0518+T7TYwrsTHs+G/Rte4l
      jjvhBB598jl0VxkjzV28Vady80++y7btvXTUvMWqbU2MnbmQeMP7RDMC+MdQRRMbmyJ8/yc/
      Z9KwwgM+CP4R09Tx212sadlALNXPQGQnf/twGYh2ji2vZHn9Svw2G1ubl5FF4eypX2dXsIvZ
      VVOYPep0uuMDLJz0TeqaX+G97Yt524RTK0fydssWAp5RfH3CSWTVGEcN/xqTnXHeblhHqRRi
      e18jR4/5FrUNzyHZh1NshV2dq0lKATq73qM/o3HixP/Hu1vuo7j4GE4fO48NLctI9zVzdEGA
      DTtfYoWhc87Yr/DSjhW4HOX8v6PO/Jdhzie+u+CKHzN/xhh+85s/sPqd11m6dBnvvv8+waRK
      T3sjf3jgOf7f108FYHixm+ffqua4WZP2cZ5hmAgCZMNNvPbaW6xetYJ3PqijzC/zytKNnHD0
      SCyBKsaVe+kMxdB3hxZGMowlUMX4ch+doTgTZ5/EzVf/F7U7mtB1fW8buq4zb96JnH/Zj/n6
      189m+6pXiIkeAjaJ/t4eRk2egd2MkMwanPr1C1h03CSqV63izO/9jG+ccvzeerxDxhNr30ZS
      sOFRREzTxDBMjp1zIqQixHBz/MzJNDU3YRg6pmkyYuox3PjDi2iu2Yp96HR+eNFZpNWcbQIm
      um6QVbNIosioKcfyy5uupLamhbnzjifS28Tyd1cybc7JFLtksqbBKd/4DpddcSkN694kgYf0
      QA9HHz+P2EAv8+bO48IrrmNUiRPd0KhvS3D7Hb8n1FiD5Czgpz+/GXs6zrSvHIfPCu1dfQdz
      3O+Dw1GJonUzkFVpC+7g+An/j4leG27PWCZXzmG8WyYlFTIhUElUszC7ason6hAEgRPH/wdF
      Vpm6nh1MqJiJVdz3lK4ZOoJgkjEsTCwaSle8D0n28Y0pZ5DJ9PN202amlJTRm1SZWj6BSCqM
      yzmE08fOQxAEJpROZ9Gkc3BbJI4bcxaVDif1vdsYXjqDAtnC/gPaj/iEAJa+/AyPPP0CM46f
      Q1D18MSjD3DnTZdS3z7Agq+ew//84b959ZUlVFZWcvyc2SRNB6OqKvHYZIx4B9df/zNmLToX
      pwV2btvGrx98ikeeeIxU9y7mz5lJZ9pJpddK044aIpqM12Gjsqocf3EZLptM044awpoFj91O
      uq+OPz7+LqeccBSVlVW7t5GorKyibNRUVv7tfnb2GYwPiIyaOR9BAEGALRvWYfcW4XT7KS5w
      U1JawfS581j25J2sa+jBIUuASOXQoYyt8FA1YTqVVZVYnT5KCty0NjcgO/1I2Tg9wTDl5WX4
      iypw2RSqKspQnD6qRo3DGm3knkcWY+x25fnnns4vbrieJTUxvnrsRIRkJ7fe9Sxfm3cUDR09
      +IsqOPmMs2muXkFCk/AVlDKkyIdsD+AnxJTjT0IQNNZ9sJZAcSkV447i3efuoTlsUlZSxInH
      juNn19/AUScsZMiQSiRBorKqnI62FjTRSlGB53Mf8PseuBIBRwFfqfoKaTXDmIrZbKpfTIfq
      ptxdCIlGdiQEhigqrbF+bEKKNa1b95YPOEsQBQGnLYBNEil0FjF96DE0dm3GEBQAbIqPrc1v
      sKSxhgUjZxJP9dKRiOG3OSnzViIJAsW+0Zw7eSGbu1oZV1hCXagVl9VBubcSQRAAqCoczru1
      L6JLXpwWiQJnEZOGHE9vaAtpQ6AnVENTdIDVTe/vf1+/7A/Coj2N/Pbup7jplhtxWITD17CW
      5K7f/5769hBX3XQbY8u8h6/tPIcEQRCEL70A8uT5vOSfBOcZ9OQFkGdQs48Aon0drFi9hmR2
      /zdf+4LBw2LUkaChbjt9nS10f8q9/jz/t9jnOcC2rTuYceJ86jevpS+qUlxYhCxCf7CNWFai
      q72BSZMmkUXBrshIosKUyeOOlO2HlCK/nRfeqWbm2CJer2lj+vhK6rqSFFtVJs6aS4nfdaRN
      /FTWrlzKQBJOnD8Pm+VfXdwztDYPUDWs9F/W19/VSGM/zJg4Yu+6gVAQj78QaXf1mUSUjGjD
      Y1f+aT3ZxAD1XWEmjhp+ILtzWNinE9y8YzPNwTSiniaRVrFbBNK6QoFXBiAZC2N1+Rg76WjW
      v/k8k0/+BuWef77jXypMlXXrNiMbCfpVK2qsj7huZUiRj9nHzDrS1n0m3n79BbKCg2ysl5Dm
      pFjR8BcWI3kLadz4HtZAFQgGDodAb4fKyCE2PuzNMqJAImHaibTWEhh7LGMLLdS3dGCYGp7K
      qbgzrdTv6kbHSsXwUrKRXpTC4bRuXcW4SdPo7eknpWv4vT5ioRamnXIBrVuXI0lWmmrX4Bsy
      FZ8tib14NB2tDXy4tYZpR08jqiqcs2guh/He3T587rtApq5Rt6uRsWNG770fm+fIU1uzjYmT
      JrNl/SoMRwDFMPA5BdoiOka0B39xGYbFjqHF6e8MIsoCWdGGlArRkzCp8FkpHT4RlxlnW30b
      VUPL8JWOJNZVj5Yx0XWRrGxiF1TaQ2ns2RDYi7AIAoUlBQR7gzTVbeW4c75HvP4DhEAZ7dtr
      cXuK8XhFWttDuAsKSCbSDCsvonZXG6efdtIR64jmb4PmAaClYQc2fzklB/kgLRkN0dQVZsLY
      kUfsrH4g7FcAdVs3YCmoRI2FMBCZMP7/Roz/Waiv3YTpKsFIhv9P7XsiEeWGp68nqacQBCH3
      JwqIgoAgiPtZ/uhTFAQEUdy7LIrS7mURUdz3UxLEfb6Xdi9LoogoSEiC9NG63cvSx9b/47JF
      sHy0LFp2r5OQRAsWwYJFlHA63BQVl30uvwiCIOybDGeaNLW0IAQzDCl2oyMdCv9/OTBNmpqb
      0a0xqkp9X9p9D3a10NARIeAWUdyF2K02LJLG01ueJ6QO5A5WKfcniVLuU5IQxX0/JVHCIln2
      LktS7k8W5dz63d9bJAsWMfe557s9y7IkYxEtuU/JgiIqyJKMLMooUm5ZEZXcMjKKkFves84q
      WnP/SxKiKGGRFCySFatkxSrmPjPJOGo6Tm19O5NGV7Bu41ZGjx7J9p3NjKgqZSBlUFrgpqio
      aL/+2kcApp7iqNkng5ZAEATML8WF7NBgGhmmfGUegp7CQED4ku57MJJmeJFCXVcUobcei93D
      yJEVR9qsLxTZ5sLjkOnp7WXC+PG8v24Ti44Zx6oPu5H0NNG+ThSnF6/jkzds9hGAYHFQWgRw
      aJKqvkwIko3SIhvgO9KmHBQKWT5sjvCV2dPpaW6irrWbjPZ/WwDZRISa2lrGjxvDzl2bGVoa
      YMXGOibPnE2yP0Rn41bC8cx+BZDvBA8CYvEIVz10OQk9iSAIiGIuxs8t52L/T35+PL7/qB+w
      J4YXxT2x/e74XszF/5KwO4z6eLwv/kOcvzeul5B2x/l7Yvt94n1xd3i1T9z/sU/Rgsvhorjk
      8wk8fxcoz6AmnwyXZ9CTF0CeQU1eAHkGNXkB5BnU5AWQZ1CTF0CeQc0+Agj3trFi1UcDYnr7
      eo+IUf8MU1fZUddAY90OMvpHd2/jA0HSWm555446AOp27jgSJh5RdmxexZJla/7pzHdHmnBv
      B++99x6d7U1s3LqdtpYGWppa6Yscmhn0Pg/7PAdYtXQp00+cT1vNGlZ+2I1dH2DC2PG898Em
      ps84iv72PkrHlBPuCSNJ4HHYkB1OAhVjqSpyHgZzTd5fvgIEcIkZ6gdEvEKMQl8xjoCb91dt
      YUiRC8nuxm4TSfW1k3SUQ7iLOaeeTbH/cNh45MiGW9jYZCKpPciSha7OZlz+Yuq3bWbq3NOZ
      MWHYEbEr3N1ES2cftsIRdNdtQEv1IxWPw1Rj6KEgXZYyPIk6TP8opEQ38047G5f1E3O2HXI+
      8RygsrKItR+spalzAL/LwYgRI9A0ndETJiHqKvFoDFXXMXQdi93HzFkzqa2pp6LQ8YUbu9tk
      Cr0KsitAKJbCYRPxl1Tgc8h0dPdR4veg2O2YJtjtdhSnl9HDh+C2WmjtGThMNh45BFHGblVQ
      shFMV4BwJIxpGBSVD6M0cOSmbfEWlrKttoF09zZipoPKykpGDhuCgUTZsFH4bRI2l59RQyso
      rRp2WA7+PXzmJ8Hhvk7qOwY4euoExN2DYNKxAbojKsOGFH+hRuY5MBrq66gcPpL+UIjSkpIj
      bc6/LflUiDyDmk+OBwDee/t1LJ5Sjp40mowhgZpC1U2sdhdaOobDGyARDmJzeVAzKpgqgsWO
      kYkj26w0NrUzfORw0okUEjpOfyHWfzlA+0AxWfrmG8w89gS622vJKqOZNDJwCOv/MmNSvWoZ
      JROOIdJZjyHamDR+7JE2CoBspJP3tnYxsdRKc1LkuKkTjrRJwH5mh64aMZZEMsWqd99GdRRR
      7LKTUrPYFQkdGT3xIVa/B/R6otlCbNk2OhMWqgptmIKEYUg0NTWgxRIYFjsTPAVwCAWQ7m+h
      sydKY3sfdsPAyF/A9mLoKu09fUTZQZFHwODfxzc1H9YT6QuTLBiGYfz7jLX4RAi0ef0q7IEq
      FC1KEjtlhQWAgWlotLc04SsqYfnbbzHhK8cyYuhY+ju2k8RBqL2OYeOOwutyg5lFzWh0d7Yy
      bPw0vA75kBkc6u3FWxigr7MbWTHQLQFKCg5XJ/zfGz0dZiBjQ0+FEQQTU5ApKT746dIPBT09
      PXjtMn2RBIbFytCyI99v/Fx9ANM0SKfSWG12RPEjJRuGgSjmn6vl+fKQ7wTnGdTkxwPkGfTk
      BZBnUJMXQJ5BTV4AeQY1eQHkGdTkBZBnUJMXQJ5BzaAUQPafvJn8QLc52DKqqnKgj2E+j12H
      ii+qbU3TMIxPeSX8IWB/9g9KAaRSnz4C6bNsc7BlMpnMAf/wn8euQ8UX1XYmk9nnRehfFPuz
      f1AK4GDIpBJEYol/ozSzQ0M23s/qNevo6A4e8FXpSHEo7Bz0AkiFu2isr+P5v71EY9e/HjWW
      ivSw9L3V1G5aTV3zZ3thYOP2rbz8wrPcc/8TqJ+lgGlSX1PNW2+/Q1co9pna2EM8HGTl8rd5
      +dVlaAdUEmSHh7ICJ8vfepXtLX0HWHpfDEMnm80S6dhOYzBzUHXtj4YdW1i7di3vrFhz0HUN
      egFgGmzd0YDLKn7qWV3NZtFVlWRWI5P8bOFAT3sTzV1hJk8a/5mcbepZmnsGOHraFHbUbv1M
      beyhqX4HyWyGTMY84B9WzySJpHQWfPVsJgw7uEzNaF8bjz32OBt2dOC1H/r3LAjAzp11SJaD
      zzI+fIMv/12RFI6dNR1D9lDi+9dp1RZJZvzk0WxbV01J5WdzfunwyXx//tdAED7bQSlasOhJ
      VqxcTeWoiZ+pjT0Ulg1lzFGzady+HZ0DO7vpmSitXQOosSD9lRMZP/TzD6Xs6e5m8sTxaFYf
      vi9AAG6Pj8rSInr7Iwdd16C/AqQGunjrrbd4a+kyegbi/3JbSZap+3AnTo8dm9P6mepv2lnL
      qlWrWL9xG5+puysIlJdXkE7EyKgHFsgIRppH7r+PnqRxwO+3MXQdQ88QTqQRDrKHEygqIRKL
      Ee1tI5459Hd3+kN9qLrOocjlHPQC8FdNYs4xM/ErOp/WpxItMk67Hdlqx/Ev3ov7ccqHlCMI
      kNW0z/bOGcOgesN6PIESvK4DG+ij2F3MP+VU3IJ+wH0AEGhu3IWGBY/z4AYYKVY7ppqivr6e
      rH7oO9S6rqMaMiefeOxB1zXoBZAItvL+uhrCiQw+l+1fbhsNdhOLRwmF47Ts7PhM9fd099HR
      0k64s5vP1B0UBEaMGoPyOYaRRkJBWlpaaG5p/2xXm49h85dz1mnziQR70Q5yYq1oqIv6tiDj
      x49DkQ798Mf+gQGyiSDvr91y0HUNygExkUgEr/ejeXJM0yTc34dk9+JxWPe7DYChqYT6BzAB
      t9eP3bpvP2B/ZRKxCIlUBlGSCQT8+1wF4vE4drsdSfrsAcv+2jgUpPvbefq15ZSVFjNl+izK
      Cz/5mqwvqu1EIoGiKMjyoRs6uz/+0f79zgoxGBEEAX/g0+98iBaZouIDu0PidHtxuj+vZYcP
      W8EQvn3BeUfajMPOoA+B8gxu8gLIM6jJCyDPoGZQCsA0jE/mkZgGmq5jGAaapmHu3i6TzWKa
      JqZpYug6umGAaZLNZjB23y0xDZ10JpdpaBgGmqpimkZu293oup6rwzD2Sfzas07T9D0rUFUV
      MFHV7D51gImu58qbu9sCULMZND23T9k99hq59g1j9/RYpkk6nd5tx0dt5/439u5Lru3ccwH1
      Y88htGwGbbffDCPnh1w5A1XLbaep6u79MD/yw+7ye/bJNE10Tds7oZmuqajaR/7Y4/vc/qt7
      fa9p2t72PvrJ9L2/zz7ld++3pum7y3/Mv//AoOwEd9TX0VNcitvupMhrp7UziEKa/qyIGY9i
      yjKmYUGxGBQVBeiPJZGR0NQEOjJWycDpLaCnL4jHbkUydULxLD6HQGOzhiSJ+B0uWgdSVBR6
      qBhSxIebdxAoLyUVSxCNBgkEirE6PbQ27iKZ1bHZnRS4LIRTOsGBKGPKA7R0hbA6bIwcOYxg
      bwiLRaW9NYrDrRAoKiEZ70dEIZtOgGxFFnTCsRhWuwebqGOxOSGTRbGKmBaFUDhCLJGhsjSA
      zeHBkgrTpwn4bDK6KdHZ00MqGWfatCm0NdQTTZiUVlaiZZJk03FiyQyF/gJ0NY2KBZdsEo4l
      0E2ZiiEFxFMmUiaMqXiIRAewSAJuTynBvg4SiQRTp00g2J0gkwoj2ZxIgommpokls5QX+zEF
      C92dvQwbVkxXMEEkFGLC2EqygkJHcxuuAj/JaJpAkZ+K0kI+3FFPSWEB4UQahyyAaKG3bwCn
      TSKZSiFaHbisCopgEIplqBpR9YljYVDeBm3aUUf5uLGQTGBKFlKpDH6XQk84gUUUsEki7X0R
      HBYdHQGrw4OgpkjrAg6bjGRqRFNZTMFCid9BU0s7Nk8BXouG5C5CNpJkVMhKDkq9Csm0SjKR
      wGGVCEbSKLJAWWkp3d3diKKA2+0hEo5QWlZKX1cbUVWixC3T1hejvNiP3ekgkdQo8Ck07OrE
      7XHhtIr0RtLYRJVQOEZx2RD0dJSMLuFyWMEw8Pm9NOxqYdjIITTtbMBQHDgddoYOKSeVjGNo
      WVTRRSLYhiNQjpUsO5s7mDpxDI31dXiKhiCYJloqQjAcw+Zw47ZJJFVw2hUsooDV5iQajeDz
      OenoCoKhU1xchCZYsBopErjxWTW21jUx46gJtLe0guxEsQiIRpau4AB2hwevy0aguJiB3j78
      xYWE+3roDacYWVlEe3snNpcfyQKSxYHfJZPM6IR6OzERsLv9yKJJQUEBfb19IIDT6SQcCWOT
      LfQPJHB7nVitVnz/cBt0UIZAiiLQ0thCS1sbqqaRzaTp6+0hnEjvTnZLEh2IkM5kEUWRdCZN
      MplAQieayCBb7bicTiKRMCYiJaVlqP39JE2T3t4e+vr6EWWFcHcbbW1tRBJJBNMglVVJJVPY
      FQvBYJCmtnbSiRjbP/yQWCpDb2cbCRXUVIJMNotVsdDd3YthgpZN0tfXQzgcZ6A/SCgSRZQE
      EokUXo+HeDxBNpNFFAxC4ShWq8xAOIqWyZDVTQpKSnFZdBKxONWbqmloaiOTydLT00kyoyGa
      WZrbuvE5ZXr6o6i6QCoaIqPqyDY7JSUl9PT1kE6n6e/tIprIoGdT9IaCDISjIEh43G7csk5P
      XEdLJ0lkksRDA4RjSYaWl7C9vgmb3YlVhlAojKRYKS0poS/USzzST3trG8FIjGhfF/3xDIKW
      IZnJktFFUrF+TCT6uttpa20hlszgdLlxutwEg71g6PT19dHTF0KRJRKJBD3BfmRFwetzEero
      YX/DeQalABDA0DUMIxcrZzUDl8uF1SKRzmq4XC7sVgVME13T2R1Eo+kaYJJIJHA4nXjcTpKJ
      BFaHE7fHjQCYe/oJ7I6xNR0BgVQ6jdPpwmGzkkimcDqduBwONE3H4fbjtFpAyPUVDNNEQMgt
      GyYYGhnVxOVyY1Use+sFAcw9doEggK5pmCbE43tsdCGoSTQU3G43gmkgylZKi7xkVBPT0HfH
      1SaGmetjIIBpmGi6DoJAMpneba8dTdNw+QqxySIIQi6eN0z0bApDknG53SiCSsaQcLlcKIqF
      VDqD0+XCbrOSTO32g91GIpHE6XTidjpBAE3XdsfzArqu7fWDscdGIdcv0wwDQeBjddk/5lM7
      8XgCp9OJx+UiHovjcDpxe1z7TUUZlH0AQ9MQLTbQsmhahkgkip4Gi8tHpK8f9DQoMrqRxi5b
      SGs6pm5gt8tk0xrZTIZQfz+pdBa7aDIQ6ieeSuOzyCBZkNB3H8hgsVjQ9CzxaAxBMNFFK9lE
      lH5BQNUMBEUiHgkBATx2AYtFJp1Oo2kaksWCtns5Fo1gZEGyKehqGotsQdVVdMPAZpFJqTro
      OrLdRiqbQs2kCIX6iWeyuDNZYrEkiWwSWVFIROJ09piUBnwIkgXRyO7uWAtYJDE3RNEE2SKh
      aRrpRAxBEFD13EPDSH8vBIqxKGCRZUimyagasUichBrH7i0kEg2jJ1TsnmLCPXFEdJAUEpF+
      RBE0JNRklH5BJJPVsIoiNptMOp1C1zQki4yZzeTELUhI4u6OMAKyJKKpGvF4HFEAA4FkPIYg
      CmQNMNNJQv0C6UwWBY1QqJ9YOoNrP8fCoLwCyFYrhprFFERk2YqIgW6YWBUFSQRdN1AUGYsk
      oWk6siwjWyRUTUOWZayKjKqqWCwWFKuCqqqIFguyomBqKoYBsqIgCSa6oaPIViySgLa7Xlm2
      oGoaFllGkiT8hSV4nTasSq4uSbKg2KxoqoogSVgsMgIGum7mUgYkAV3TkWUrFouEpu+xy4Kq
      algsMtaP2aVYbRiqiikIWBUZm8PNkNIAWJTcegRkWdnrB0XO+UH7uB92tyFJEoUl5bhsyj77
      blUUdE3FQMRmt4Ghoe/xgwiapqPIyl6ByYqMstsPH/lUwyJbUKxWdFUFUUJRFDBzJxOrYkXA
      RDPMnF2ikKtLVpDl3fV+vK6P+UGyWPZ7BRiUAkhEoiAKuJ0Owv0hsgZ4PW6CoRDZrIHd6yEe
      GiCVzSIqdjLpGMlUFlFUMDJpovEkoiBiYhKLxhFEsJsQjkYxRRFvgZdwdy9pzcTu9BKNBkml
      NRS7k3Q0SiKVQpByZ3JZkbHKIh2dPYRjCURAlkXC/REEEVyyTCQeQzNM3AEfkZ4+UlkN2eYm
      lRgglcoiWmxoqQSxRApBFDENjWgsgSCIWE2DSDgCkojb7SKR0vC6HHR1dhLqDe1dHw6FyOjg
      cnsYCIfIZHRsLjeJgTCpTAbRYkPNJHInAwk6u/ty+y4IOIBgLHcGLvQ5aOvowxBEvIU+Brp6
      SKsGNqeXeCxIKq1isTnJxqPEkykE0YKhZ4nFkyCIyIZONBLNvQjRaqM/HEY3wed10d3Xh6ab
      OH1eon0h0qqGZHWSToZJpVREyYqeThJNpBAEEdPUiUYTiIKAzTT32wcYlCGQq8CPzV9BpLMJ
      V1EJNicIagSXy4vV60MRVBSng6KAF7dDoSObJVDsxed20NyRpaAggM/nY2dDM57CAtw+H807
      G3AXeFFshajxbhx+P3avF5ukkbF68Vb4cNgkshkrhV4nPreDUH8/is1JoKgIm2JFksDh9dO0
      axeB4kIUp4/upl34XMVIkh1Ri2Hzegn43ThtIhnVidftw+O00ZHJ4ve6KfB5qG/uoMAfwF/g
      Y1d9M8UFAey4iPe14HU7cReWEvA6SWV1RJuXRF8LDn8xQ5xeLHoCh8OL3+XFatHJ2u24vU48
      Tiu9QQWrw0VBIIBVsSJbBBxuLy07d1HiKcL0OUgFWyguKkBW7JipIE6/H5dgYDPNIPUAACAA
      SURBVLeYOT+USzjtFnozNgJeN36Pk9BAmOLCAMVFBdQ3tFNYUoBH8RBsbcAXKMPpEjGTQXxe
      H1aLBclMYnO7cVvcuOwWulUH3hIfXpedtm4Vv9dNwO+lrrGVgL8Af8BPQ13jfkOgQXkb9LNk
      NX6ezMcDLfPvlA16JNs+ktmggzIEypNnD3kB5BnU7NMHSCQSaNqBD6b7spFMJg/JNgdbZs/t
      TkH47KOmPo9dh4ovqu1MJkMmkzmgUPDzsL9JyPYRgNPp/EIN+Hfis8SynyfePZAykiQdcB/g
      QNs41HzZ+wD/SD4EyjOoyQsgz6AmL4A8g5r9CiAZC9MbCuf+MVSSqSM3JfcXgYlJc6iZZDaJ
      aZp0hbsYSOTmBQ0nw/RGewGIpWO0D7QDkNEytIRa0A0dVVdpCjahGzqGadDW30Yym+sgtoZa
      SWQSAPTF+gjFQwAE40H6Yrk5N+OZ+D71NgWbMExjb72qnhsI0hnuJJqKAhBKhAjGc/ORRlIR
      OsOdmKZJSk3RHGrGMA10Q99bXjd0moPNpNV0bh8jXURTUUzT3Gd9d6R77/ruSDf9if699vZE
      ewCIpqJ0DOSmgYmn47T1t+UG32hZmoPNaIaGYRo0BZtIq2kM06C1v5V4JjfRWG+0d69/g/Hg
      Xv/uqWuPH5qDuf3QdI2mYBNZLTfYpX2gfa9PO8OdRJKRvb9VV7gLgGQmSUuoBdM0SavpnE8N
      A8M0aAm1kNX+yTFs/iNG1vz7G38333v7TfOVxc+ZW2rWm08+9ZrZHRwwt1RvNLt7es2dTS2f
      KPbpGGYqlTRTqZSpapqZTCbNRKjD7I5kzFQqbRrG56jyc3LP3+8xrZdbzRNuP8Fctn2Z6f6+
      2xx6/VCzuqXarLi2wvRd5TNfXf+qOeOXM0znlU7z2fXPmmf8+QzTepnV/NXrvzJ/+MwPTflS
      2bzqqavMP7z1B9N+hd1c8IcF5mPLHzPtl9vN6bdON5fXLTf9P/CbZT8uM1fvWm1W/qTSDFwd
      MFfsXGFO/vlk03GFw3xs+WPm6XefbiqXKubtS243b37pZlO+VDbPfeBc84XqF0znlU5z4n9P
      NDc2bzSLryk2i35YZC6vWW5O+cUU03ml03xl8yvmaXedZiqXKeaf3vqTefXTV5vKpYp5xRNX
      mHe9c5epXKqYJ/3hJPPVLa+aziud5pgbx5h3vHmHab3Mas6/Y7758qaX97bx7o53Tc/3PeaQ
      a4eYK+tXmiU/KjELri4wl9ctN8feONZ0Xuk0n1/9vHn8b483bZfbzIdWPmRe9NBFpnKpYl63
      +Drzl6/90pQvlc2z7z3bfGrtU6btcpt51C1HmavqV5m+H/jModcPNTe2bMz59wc+890d75pH
      3XKUabvcZj68/GHzrD+fZSqXKuavXvuV+dO//dSUL5XN/3rwv8yHVj5k2i+3m3N+N8dcun2p
      6b3Kaw67fphZ3VJtDrt+mOn5vsdcsXOFOfvXs03rZVbz8Q8eN//z/v805Utl88YXbjT/++X/
      Nq2XWc2z7z3bDIfD+xwHsL9UCNMEUcZtE9B1L+UVZQR7NT54awkRQ6aorZNh04751LPsJ8my
      fdtWdEHB53GwY8d2Ro8bSzQZpLe7hxPnzculBB8GNrVtIqtl2dG1gy3tW4ilYyQyCapbq+kI
      585027u2U9tZS1pNs755Pds6tpHRMmxt30pvtBdVV/mg4QMS2QRpNU1NRw3bSreRUlN82PUh
      G5o3MJAcQBAEqluraQ+3Y5om65rWUd9bT1pNU9tVy/qm9WT1LDWdNQwkBlB1lU1tmxhTMoZE
      JsHOnp1sad9Cbyx31tzStoW6njqyWpbq1mq2tm8lq2XZ3L6Zxr5GsnqW9c25OrN6lm0d29ja
      tpVEJkFjXyMrd63c297aprUkMgl29e5iXdM6oukosUyMVbtW7T37b2rdxM7enZimyfau7Wxq
      20RaTbOpddPedmo6apAlGVVX2diykfFl40mrabZ3bWdjy0bCyTCRZIR1TevojOSuXFvatrCz
      Z+de321o3kBWz7KlfQvRVBRVV9ncvpmAK0BKTbG5bTM1HTVEUhGiqSib2zbnzviYbGrbxJa2
      LWS0zF6f7CkvSzIZLcPmts0Y5qfcBgVAVJgxdTTBBIwvdtIZjDB1yjjMSWPobG+ksLQKf6Hv
      cxx2EsNHjwFTQkvHGDZ8BG63D5dLwG61IX8BM4j9M6475ToqiiqYM2YOx406Dt3QKXIVce6s
      c7GIFvpifVw440LGVY2jurWaHyz4AV+f9nWW1CzhO8d9h2Q2yeNrHue8Wefhd/gZWjCUOaPn
      MNI3EpfbxZQhUzht8mm525yynUuOvwRFUohn4lw570pGFo9ka/tWvjPrO5w+/XTeqHmDS+de
      im7oTKmcwllHncWIohHIFpnxpeM5ferpZLRcavC5086lrKiMup46rpp3FXNGz2F53XK+N/d7
      JNIJHlr1EOcfcz5FriLKPGXMHzefr4z4Cggwsmgk88bOY2L5ROaOmcvsEbNxWp2MLBrJWdPO
      QpEUPHYPFxxzAV67F83QuPj4iynxltDU18QFMy5gxpgZrGlYw5XzruT82efz6tZXOW/WeVgt
      ViaUTeDsaWczsngkNtnGtMppnDThJLJ6loAzwAXHXoAiKfQn+rnsxMsYWTSSDS0buPS4Szlz
      +pksqV3CZSdehqqrPLzqYc466iyGFw7H5/Axa8Qs5o2dR1pNU+wu5rzZ5yEKIn2xPr4757uM
      KBxBdWs1V5x4Bf81+794ofoFLj7+YkRBZELZBM6YegbifhIf8rlAB7HNwZbJ5wLlyOcC5clz
      hMgLIM+gJi+APIOavADyDGryAsgzqMkLIM+gJi+APIOavADyDGryAsgzqMkLIM+gRvrFL37x
      i8PTlEp/fwK7PfcSunQqAaKMKB6+HKA9LK1dymn3nEZ9Tz2jikdx0h9P4tUtrzJ/7Hy+8Zdv
      8Oelf+a4Ecdx86s3c8OLNzBz+EweWP4Alz5+KeW+clY3rOac+87BaXXSFenirHvPoinYhM/q
      Y+HdC9ncujmXD3TXaTyz7hnmj5/Pf/zlP/jL8r+wYNwCfvD0D7jppZuYPmQ6D61+iEseu4Th
      hcPZ2LKRM+45g6yWxSbbWHTnIlbUr2D2iNmcee+ZPLTyIRaMWcDVz1/Nz1/5OcePOp4737mT
      yx6/jFHFo3i//n2+cd83UCwKvdFeFt25iPaBdsp8ZZzyp1NYtmMZbpubU/50Ci39LZR6Szn1
      zlNZXrecoyqP4uQ/nswL1S9wwpgTOPves7n//fuZN3Yelz1xGbe+divHDDuG3771W3707I+Y
      XDGZF6pf4Py/no/H7qGxr5HT7jqNgeQAVsnKwj8tZGPrRqYOmcqpd57KS5teYsG4BZx171nc
      +969zB83n2uevYYbXriB6UOm8+iaR7nksUsY4hvChuYNnHXvWWS1LLqhs+iuRWzv2s7o4tEs
      /NNCXt/6OnPHzuW8B8/j92/9noUTFnLDizdwzTPXcPTQo3n8g8e58KELKXYXU9tZy9n/czaR
      VIRZQ2dhs330JtBbbrnllsMoAI1tm7aSzKTYXF2Lx2sjHo9T19hK3eYPCKsKZUX+w2LJrS/f
      yvKG5ezo3oHf4eepdU9R31tPZUEl9757Lx3hDoodxdz93t30xnqxiBaeXPskrf2tpNU0K3et
      pKazhoa+BnqiPSzfuZzazlosWFiyfQk1nTU4FSdPrXuKpmATRa4iHlzxIG0Dbbhtbu5//356
      oj14FS8PrHyA7mg3mqGxpnEN1a3VNPY1YpgGL256kZqOGoYVDuO+9+6jtb+VCncFd713Fz3R
      HlxWFw+vfpj2gXY0XePtD9+mtquWllALoWSI5Ttz+6hICn+r/hvbu7bTGemkurWaHV07MEyD
      Vza/wo7uHXgdXp5Z/wwNfQ04FAePr3mc9oF2itxF3PPuPfTGeilyFHH3e3fTF+/DIll4fsPz
      NPQ1EEvHqG6tprq1mg+7PsQqW3l166vUdNRQ5CrisQ8eo763nmJ3MQ+seICOcAcFzgL+svwv
      9ER7cMpOHl79MJ2RTlJqig8aP2BL+xaaQ83EM3HerH2TbR3bCLgCPLn2SXb27KSqoIq7l91N
      d6SbMl8Zv3/z94QSIWRJ5sVNL9IYbCSSilDTUcO6pnVs79rO5XMux2637z0ObrnlllsO48xw
      AsNGjcNQY3jskMyaqIkwTpcHa8kQCgsPz8EPcMnxl9CZ6OTUSady/uzz2dCygRJ3CRcddxE1
      HTX0xfu44JgLQIEPGj7g6pOu5qiqo3hm/TNcc/I1DCQH+ONbf+Sak6+hwldBf6KfUyedygnD
      TqCuv44ZQ2dwzcnXUNddh0NxcPmJl1PXU0csHeOak69BN3Q2tmzkwmMvZFzlOJ5e/zRXL7ia
      tJZG1VUuOvYijhl5DDUdNUwZMoXzZ5/P2sa1uWzQWecSyoao6azhinlXUO4r57Wtr/HDk35I
      MB7kd3//HT9e+GOG+IfQ3t/OV6d8lW/O+CZb2rcwtnQs5846l2ufv5ZFkxbxrZnfor6nnrGl
      Y7l87uXUdtTic/i4duG1tPa3ohs635v7PXpjvTT0NXDurHNxuV0s27GMK+ddyZzRc3hk9SP8
      6OQf4bA6SKtpLjr2ImaNmMW29m3MHDaTi+dczLrmdRQ6C7n8xMvZ2bOTYDzIlSdeiaqrrGlY
      w8XHX8yEIRN4ZsMzXLvwWtJaGgGBbx/3baZVTaOhr4ETx5zIJXMuYW3jWkq9pXz7uG9T21lL
      b6yXC465gLSaZvWu1Vy14CqOGXkMD696mOtPvR5JkEhkE5w36zwk8ZNJh/ls0IPY5mDL5LNB
      c+SzQfPkOULkBZBnUJMXQJ5BTV4AeQY1eQHkGdTkBZBnUJMXQJ5BTV4AeQY1eQHkGdTkBZBn
      UHMYk+H+fdjZuZPrX7yeWDpGVUEV1y2+js1tmzl66NH8bsnveHnzy0yrmMZzm57jwRUPMr1q
      Oku3L+X2N29nWGAYDX0N3PTiTZR4SoilY9z44o0kMgm8Vi/XvXgdvdFexpSM4aYXb2LVrlXM
      GjGLX7/xa5ZsW8LsEbP568q/8r8r/pcpZVNY0bCC3yz5DWNKx9ASauFnf/sZDsWBQ3Hw07/9
      lMZgI5PKJ3Hba7fxzvZ3mDFkBo+ufZRHVj/CzOEzWVKzhN+/+XvGlo5lV+8ubn75ZgpcBcQz
      cX7y/E/IallKPCVc/7frqeuuo8hdxDXPXkNaTVPizq2v761nfNl4fvq3n7KuaR1HDzuaW1+7
      lSXbljBrxCzuf/9+Hl39KNOGTOPVba/y52V/ZnLFZDa0bOC2V2+j1FtKf6Kfa5+/FkmUsMk2
      rn3+Wroj3YwuGc0NL97AxpaNzBw2k9teu43Xtr7GMSOO4aFVD/HA8geYUj6FVQ2r+M3ff8PI
      opE0B5v52Qs/w6k4kUSJ6xdfT3+in6GBofx08U/Z2r6V6UOn88e3/shzG57juFHH8dS6p7h7
      6d1Mq5rGivoV/PL1X1JVUEV3pJsbXrwBi2RhqG/oJ7JBD2MynMH2bVvwl1YS6unE7Q0w0B9i
      9LiJOKxf7Ktx/pE/vfMnHl3/KC9tfomeaA/3vHsPAgKFrkJufvlmAPyyn1vfvBXN0LDLdp5b
      /xydkU4GkgME40FW7VpFTWcN40rH8cz6Z1hcvZgLj76Qh1Y+xJNrnqQ72s0db90BgMvm4hev
      /AIAt83Nba/dRlbP4hSdPL7+cYKJIBktQzQd5c3aN1nbtJZvzPgG9y2/D1EQkSWZX73xKwCK
      rcVc98p1aIaG3+HnkdWP0BXpQtVVGkONrG1ay7bObUypmMLjax7n77V/59I5l3Lvu/ciCiJv
      f/g2f6/9O69ve53vHPcd7n33XhRJIZlNcveyuwEQRZFfvZ5rL+AKcMMLN2BiElAC3PHuHWS0
      DIqksKxuGXXddXSEO7DJNl7b+hrv7niXC465gL+u/CuPffAY8WycP779RwQEnIqT2167LVeX
      M8AvX/8lKTWFQ3LwXPVzdMdyM1XHM3He2f4OG5o3MH/cfB5c8SBPr3ua7mj3Xhu9di8/feGn
      AAwLDOOGF28go2VwWV28/eHb1PXU0RfrQ5ZkXtv6Gu9sf4ctP9vyiWPh8IVAWpLW9g5aG5vR
      RehobKG9q5eMevjfSTZn9Bw8Ng8LJyxk7ti5VPgqmFo5lRPGnMDkislU+CqYO2Yu88bNw+fw
      ceqkUzl96ul47V4WTVrEKRNPwaE4OH3q6Xx18lfxO/wsmriIuWPn4nf4OW7UcZw97WyGBoYy
      vmw8Z0w9g/Fl46n0V3LWtLM4fvTxBJwB5o+bz5lHnYnL6uLUiafytSlfw211s2jSIuaOmUuR
      q4g5o+ewYPwCRhePZnjhcI4ddSzHjDyGQlchCycsZN7YeXjtXhZOXMjpU07HLts5c+qZnDrx
      VDw2DwvGLWDR5EUUuYuYPWI235r5LVxWFyeOPZHTJp9GkbuImcNnctL4k6j0VzKpfBJnTD2D
      MSVjGFk0ktMmncaMYTModhczd8xcFk5ciNfu5aQJJ7Fo0iK8di+nTDyFRZMW4VScnDH1DI4b
      dRwBZ4C5Y+ayYNwCKnwVTKqYxFenfJWJFROp8FVw+tTTOX708fjsPhaMW8Bpk0/DqTg5bfJp
      LJq8CLfVzSkTT2HhxIX4HD7mjZvHwgkLKfWWMmXIFBaMX8CUIVMo95Yzb9w85o+bT4GzgFMm
      ncJpk0/L+XHyIk6ddCouq4uvTfnakc4GNclmVQRDZfuOOipHTsShgKwoiAfwkrhDQSQSQbbL
      WC1WJFEio2ZyZ1qLTFbLYpgGmWQGp8uJqqvYZFtu3nktjV22Y2KSzqaxKTYEBNJqGsWiEI/F
      UewKsiRjkSxktAwCAopF2VuvTbah6VpuDv+sjtVmRTVU7HIuTz2lprDJuXozWgaLaMEiWfbO
      lZ9OpnN2GSo2iw3DNPYOoAFIZVN77UqpKawWK6IgktEySKKERbSQUlMoFgVJkPau3zOL8sft
      NTGxWqxouoZmaDmfuJ1ktWzODx/zycdtFwWRVDb1kR/UDIKwHz8YGqqmYqgGsiyjmRp25ZN+
      SKtpZIuMRbSQVtOIgohiUVB1FcMwsMrWvT79x99qT11Wi5V4LP6JbNB8OvRBbHOwZfLp0Dny
      6dB58hwh8gLIM6jJCyDPoCYvgDyDmrwA8gxq8gLIM6jJCyDPoCYvgDyDmrwA8gxqjlg2aDaT
      QbIcxly8jzEQG+DZ6mexSBYKnAU8v+F5eqI9DAsMY9mOZWxu20yVr4ra7lrerXuX0SWjaQo2
      8fLml6ksqGQgMcDT656mwl+Bbug8u/7ZXBakaOO5Tc9hmAYlnhJe2fwKTcEmRhaP5M3aN6nt
      rGV08Wg2NG9g6Y6lDC8YTnuknRc2vcDIopEMJAd4at1TBJwBbLKN5zc8Tywdo9xXzps1b1LX
      U0eVt4rqjmre3/k+Y0vHUt9TzyubX2FE0QgGkjm7SjwlaIbGE2uewCbb8Nq9LN6wmHAyTGVB
      JaqqAqAaKos3LCaSilDhq2DxxsW0D7QzomgES2pyUzyOKRnDhtYNrG5aTZWnirq+Ot6seZNR
      xaPoDHeyeONiyn3lZPUsj33wGB6bB5tsY/HmxWiGRpGriNdrX6c72k2Vv4q3drzFh90fMqpo
      FBtbNrKsbhnD/cNpC7fx0paXGF44nEgqwpNrnyTgCiCLMs+sfwbTNAm4AizeuJhgPEhVoIr3
      dr7HuqZ1jC8bz5a2Lbyx9Q3Glo6lOdTM4o2LqQpUkcqmeHr903hsHpwW55HMBtXpaO3EZldI
      aSLZZAybLCDINhqbW6kaWoXXJjGQMnFaNOKqiFPSMCQr4UiCMaOGIRyinKHb37ydu96/i3Jv
      ObeeeSsXP3oxiqTw1Hef4lv3fwvd1Pnzf/yZny/5OQPJAZpDzTz+wePs7NnJRfUX0Rvr5Y1t
      b/D8xucZVTyKB95/gMqCSi6eeTE///vP8dl9/O6c33HZE5chiRL/e+H/8r3HvodmaPzl/L/w
      4+d+TCwd45ZFt/DY+sdoCDawoXkD8UycZ9Y/w9FVR/Otmd/iJ4t/gtPq5OGLHuY/H/hPTEwe
      Oe8Rrlp8FdF0lJ5YD/cvv5/63no2tm6ksa+RN2vf5MSxJzJ1yFTuWnoXwwuHc9X8q/jRcz/C
      rtjZdMMmytxlCILA4xse58qnrsRtc/PHb/6R7z72XWRJ5t7z7uXyJy7HxOTBCx/kxiU3ktEy
      3DL/Fn655Jf0xnqp761n2Y5lrGlcwznTz8Gu2HlizRNMKJvAd+d/l1v+fgsem4fbz7idy5+7
      HItk4b5v3Md3n/4umq5x5zl3cuPLNxJOhfnZgp/x1NqnqOutY9WuVcRSMV7Y9AIzh81k4cSF
      /Or1X1HqKeW2s27je499D4tk4anvPsW5D56Lpmukv53mx8/9mFAiREt/C0tqlrCheQPLdixD
      EiWeXvc0E8omsPJHKz9xLBzGEEgjmTZobtxFKBQCDAb6B2jrClJZUUY2naKrbwA9ESac1LCY
      GgOxFG5FIBqOkj2EKUtOxQmAz+HDa/ciCAJW2Yrv/7d35lFWVPe+/5yqM/bcTTdNM8kkphkU
      BJXBKIigGJWLE6DGOEQMcYiJ5gZjfE4r3nsfV+N9DvGaxMQsl3nRq7hwVmI0Kg6IIA00ND3T
      fbr7DH1On/mcGn7vj5NTNoh59+kV8+6pz1qstdnU/u1f/aq+u3rR39pVUoXH5cGluqgrq6PU
      U4oDB9Ul1dSV1wEwonQEVSVVAFR6KxlVMQqAmpIaKnwV+fieUhqqGiwD2Oiq0aiKiqqojKoY
      RaknP391aTU1pTWfaVf6Kqn05T0rZZ4y6srrcKku3KqbSl8lHpcHhyOfV4m7xMprROkIAOrK
      6hhRNuLTXCobACj3lFtmM4fDYeVb5imjqqQqbzJT3dSX1+N2unGrburK6nCrbiuvMk/ZZ9pV
      JVVU+aqsdiGnUncpFd4KHA6HVVO36kZxKIyuHG3VoaakhnJvudWuKfu0DtUl+T1jy7xljCwf
      icPhwOvyMqJ0BC417x2qLqmmzFuGAwc1pTXWmOqSaqsOtWW1h19A5YhhSDqdlXgkKJ0H+iSZ
      TEpvd6eEIzHpOdAlQ/GEJKIh6ekLSjqdlnQ6LeEBv/QHArK/rVNM0/wvyyQSicj77e9LOBEW
      0zRlj3+PdIbyc3SGOmXngZ0SjUZlIDYgH7Z/KIZpSDwdlw/aP5CslpV0Li1vt7wtyWxSdEOX
      jzo/knAiLNFoVLZ2bJW+aJ+Ypikt/S3SFmgTEZG2QJvs6t0lpmlKIBaQbZ3bJBaLSSQRkXf3
      vyu6oUtWy8qW1i2SzCbFMA3Z0b3DirV/YL/s8e+RaDQqfdE+2da1TUzTlEgyIh+0f2CNf7vl
      bUllU2IYhrzf9r5EU1ExTVN2dO+QrnCXmKYpmqaJYRhimqZ8cuATq39v315pD7Zb8+3r3yem
      aUrfUJ80+ZskGo1KMB6U99veF8MwJJFJyAftH0hGy0hOz8k7+9+RRCaRn69nhwTjQTFNU5r7
      m6VrsEtERDrDnbK7b7eYpinBeFC2dm6VRCIhkXhE3tn/jmiGJjk9J1tat0gikxDDNGRrx1YJ
      xAJWvoUcu8PdVk0HYgOytWOrGGY+ry2tW0TTNdEMTd5tfVciyYhEo9GD7gOwN8f9Usd82TG2
      GzSP7Qa1sfmasAVgU9TYArApamwB2BQ1tgBsihpbADZFjS0Am6LGFoBNUWMLwKaoKUoBCMLu
      3t3EM3FExPrgNUAgFqA73A3AYHKQloEWIL/h1B7/HnRDJ6tl2dmzE93QMcVkX/8+YpkYAHv8
      exhKDwHQE+nBH/UD0Bvp5cDgAQCiqSj7+vdZcZt6m6wNrpp6msjqWUSE1kAr4UQYgL5oH72R
      XgBCiRCtgVZEhEQ2wW7/bkwx0U2dpt78eMM02NW7i2Q2iYjQHmwnnAgjIhiGgYggInQEO6z+
      jlAHfUN9Vr5d4a58HVKDtIXaAIikItZHtjNahl29u/IbVInJzp6dJLNJTDFpCbRYdTgQOUAg
      HgDAP+TnQGRYHQbydUjlUuzq3YVpmmiGRlNPExktg4jQ0t/CUCofqy3QRjAezF+reID2YDsA
      sXTMqkMql2Jnz04M08AwDfb495DRMp9zMxwxTEkmEpJOJyWeTEtHe4fEY1FJJpPS1t4h4cGI
      5DIpiSVSkkklJBZPSmd7mySSaYnHopLOZiWVTEoymZRodEiGYokvnMmG5zeIc61T5tw9R15u
      elk83/PIyB+OlPfa3pPqG6rFt84nT295Wqb9j2ni/p5bfvfu7+S0fz1N1LWq3LrxVln7+7Wi
      XK3IFb+9Qu5+/m5xXeOSeffMk0c3Pyqua1xyzK3HyCu7XhHfOp9U31Atb+x9Q+purJOya8vk
      td2vyaT1k8R1jUse3fyonLYhH/eOTXfIzU/fLOpaVc598Fx58v0nxX2NWyb8ZIK82/qulF9X
      LuXXlstr21+TKbdMEdc1Lnlq61OyaMMica51ys9f/Llc9burRLlakct+c5n880v/LMrVisy/
      Z748tfUpcV3jkrE/His9oR4ZGhqSeDwuGz/eKK5rXDJx/USrDiN+MEJe3/O6VN1QZeU7459m
      SP2t9fLH9/8os++aLepaVR564yG58JELRb1aleuevE5ueeYWUa5WZNl9y+SJrU9I7S21MmfD
      HHmr9S0Z9bNRcvRdR8sHHR/I+NvGS936Onm1+VWZcfcMKbuxTP79z/8up//r6aJercpPn/2p
      3PCHG0Rdq8rKh1bKQ288JM61Tjn+ruPlxZ0vim+dz7pW9T+qF+86r7y+53WZcfsMUdeq8uhb
      j8o5D5wjytWK3Pi/b5SbnrpJ1LWqLL1v6WG9QEfQDp2jZV8Hei5CxlHG6NoKWnbvJKeWUeJ1
      YZgGoYEsui6gKjgUJw4jR09vD6nBATSPD494KSlVSaWzOD1epn9j6hfKLqbrFAAAEa9JREFU
      pDXQiiEG/qif1kArWT1LOBlm/8B+oqkogtAT6aE73I1maLQMtHAgcgDDNOgMdRKIBzDFpLmv
      GbfTjW7qHBg8QEeoA83Q6In0sH9gP2ktTVbP0hZoI5wMW0+L/lg/mqHRNdjF/sB+TDHpHuwm
      mopiiklnqJP2UDs5I0ffUB/twXbimTgAbcE2eqO9Vl6doU4MMegIddAebMcUk7ZAGyXuEkwx
      6RrsojPciWZoBONBhlJDlFeWW08YzdAYiA2wt28vWT2Lbujs9u9mKD2Ew+GgPdROf6wfQwx6
      oj20B9sxTIO2YBstAy0YYtAd7salujDFpDXYSnekG93U8Q/5aQ22ktEy5PQcLcEWoumodb79
      sX6rdoVr0hnqJJ6N5+sQztdBN3U6Qh10hbusmrYGWgnGg/k5B1rpCnVhmAatwVa6wl2YYtIR
      6sCtuq3rZor5mXvhCApAZdKUiaTj5SQ0laoKHw5TRy2pJJcaoryyCkVLEUkL9bVVOAABHGIS
      wkAtKaO6vBrQ8/1fIpP1y9czdexU5k+Zz5zxc/L22rIRrDguv1FtKBHivJnncdzk4/jkwCdc
      dfJVXDT3Iv7U/CdWn7iajJbhqY+e4oI5F1Dpq6SxoZF5k+Yxrmwc9SPqmTFmBqdOPZUybxk+
      l49VJ6yi3FtOIpvgO/O/w7SGaezy72LVrFWcf+L5bN67mcvmX4ZhGsyfNJ+zZp7F2OqxVJVU
      cUz9MSz+xmIUh4Ju6pzbeC4TGyayP7CfK0++ktOnnc6W1i1cOu9S0rk0T374JBfOvZCa0hqm
      jJzCKUefwrFjj6XEXcLE2ok0jm0kl8uhqirXLr6WEncJE2onsGxaftPbcm85K49fSX15/qWa
      i+ZexKT6SXRHujn76LM5YdIJbO3YyhUnX8EVC6/gtd2vcf6c83Grbk6YeAJnzzyb8bXjqSmp
      YXrDdE466iScipPqkmrOmXEOZZ4yoqkol55wKVNHTmXHgR1cPPti/mH2P7B572YuX3g5uqFz
      ytGnsHzmcsZVj2Ns1VjmTJjDvEnzUBwKdeV1rJi1glJ3KaFEiMsXXk7j6PxLMZcvuJwrFlzB
      8zuf55KTLkFxKMydMJczZ5yJchjrm+0G/RLHfNkxths0j+0GtbH5mrAFYFPU2AKwKWpsAdgU
      NbYAbIoaWwA2RY0tAJuixhaATVFjC8CmqClKAYgI27q25X0/IjT3NVtOy4I/CCAYD9LU2wRA
      Mptke/d2NEMjo2X4sOND6zOdu/t2W87H7d3biSQjAJZ/Bcj7e/7qXIykIzQPNFtxP+r8CNM0
      yWpZtnZsJaNlMMVkj3+P5VLtHuymM9SZzysRZF9gn+UG3enfablBd/TusDw9H3V+ZDle9/Xv
      IxAPfMYNahgGpmkiInRHuwkk8q7N3lgv3dG/umJTg7SGWz/NPdBsuUGb+pssN+gO/w4S2cRB
      cwCYpolpmodtG4ZxUB0M0yCn5/iw40PSuTQiQlNPE4PJQQCa+5otx6o/6mdv3958XqkIH3d9
      jCkmiWyCrR1bLTfox10fk86lD3svHNEvxQ+GwqColJSWEhuKUV1VSTqbQ8ukCA1GGDN6NDlD
      GIqEmDhx0leWycNvPszPXvoZ00dP556V97Dy4ZWUe8vZdN0mlv/bcrJalt9/+/fc9vJtdIY6
      +eWlv+TxLY/zXtt73LTsJgKxAI+/9zgXn3gxjeMbufeNe5k5eiarG1dz/X9cz7iacTx48YOc
      9/B5eFwenln3DKseWUVaS7Px2o3ctvk2BhID3LX4Ln79l1/zXsd73LL8FhLZBA+88QDLpi1j
      zYlruOrxqxhVMYonr36SM//tTESEjVdvZP3m9fiH/Dx84cM89sFjbOvZxk2LbqJzsJNndj7D
      ihkrGFcyjts33c7s8bO5aelNXPrrS6ktr2XbT7dR6a5EURTcbjeZTCZveku084OXfoDX6eW2
      Rbdx4ws3YojB/d+6nzv/dCfRTJSfLfgZv9rxK1rDrfx08U/Z0rmFza2bWT1rNT7Vx68++BXz
      xs/jidVPWHF9Ph+pVAqAkpISq+3z+chk8nZn0zQ595FzebvtbW5edjOxTIxH//Ioy2csZ9n0
      Zfzojz9i2uhp/Hzlz7nokYsocZew6fpNrHhwBfFMnOevf54b/nAD+wP7efDiB9m0YxOv7XmN
      dYvWoSoqD77xIN88+ptsumbTZ+6FIygAjYH+Pgzc+FzQdaCLkfVj8NaOhuQQpmkSGuiltTPI
      UZNGf6WZ9Ebzq300FaU32othGiSzSXoiPdaqE06GCcVDmGLSM9hDJBVBEALxAAPxT1flhroG
      BGEwOUj/UD+mmESSEfxRP7qpg5b38sezcUzTpDfaSzybX5XDqbC1mgUTQcvzHogH6I/lY0XT
      UfqG+sjqWQD6hvqsXPqG+gglQwCEkiGrHUgE8Br5XZBDiVB+5UdIZBIks0kq3ZXWEwDyT8RI
      OpL/QLiepS+en8/hcBBMBollY/nzSkcIJoPWHP2JfiC/+g6Rz30gMXBQ3MJqDxzUPnR+/5Df
      OvfCuxXBeJD+oX4EYSA2QDAeJGfkMLMm/qifWCaGYRr0RHqsdwT8UT+hxF/rEAvgdrqtOhzO
      9nYEBeBk7FETQBSMXIqcYVBTW0/ViBpScYV4JITq8jBuvJuamuqvNJOfnPkTZk6YyYkTT2Tm
      2JlUeCuoKa1h2fRlVPmqCCfDnHXMWcyZMoem3iYuOekSVp+4mrda3uK82eeR0TM8t/05Vsxa
      QYWvgpkNM5k9bjYj3SMZWz+WaQ3TmDd5HlUlVXidXs6ddS7VJdUksglWnbCK4446jtZQK0sn
      LGX5tOW82fImq05YhWEanDr1VJZOX0pDRQP15fVMHjmZhZMX4nF60AyNpVOWMvWoqXQOdnL+
      seez+OjFbOvZxooZK8hoGZ7f/TzLG5dT4amgsaGRBZMX0NjQSKWvkvE14zlm9DFomoaqqiiK
      gsPhQFEUvjnhm9y++HZ8Lh/zxs2jxleDYRosnryYcZXj6E/0M79+PnMnzWX3wG7ObjybC469
      gPe63mPJlCW4FBdzx83l1Emn4na7rbiqqlqb0rpcLqvtdDpRFCX/AoymsfH7G3mz5U3WnLQG
      3dA5vfF0lk5byujK0Uysncjs8bM5fvzxuJ1uastqOWP6GVT4Kggnwqw+YTUzxsygqbeJNSes
      4cqFV/LK7le4cM6FOBwOFkxewJLGJbYbtIDtBv1i2G5QG5v/ZtgCsClqbAHYFDW2AGyKGlsA
      NkWNLQCbosYWgE1RYwvApqixBWBT1Hw9n2r/O+BwvwB3OBwH9ZumiSkmTtWJiKCbOk4lX7JD
      26qS/22uZmioioriUDDMvNNRVdSD2qZ86ogUBM3QDhvXMA0Uh4KifBqr0C8iqIqKIBim8Tfz
      cuCwYjkcjoOOGY4hBg4c+bh/rYPD4bDqcLi6fd58h6vp57X/1jUZzv9LrP8s6h133HHHFxr5
      /zHJZBJd1zFNE1VVSSaTaJqG0+kklUqRy+XI5DKseWwNNz99M8cfdTwbXt3Ad377HWrLatm8
      ZzPf+l/fQlEUusJdLPvFMnb17qLCXcHCDQt5Z/87HDv2WBb+y0J+885vOO0bp7HsvmX8YvMv
      WNK4hMseu4x//I9/ZNaYWdz/p/v59mPfZkzVGN5te5dlv1hGNBXF4/Jw8r+czMu7XmbhlIWc
      uuFUHvrzQyyZuoTLf385659dz/zJ87n7hbu54rdXcNSIo3hl1yuc8+A5GGLQG+nllP95Cvv6
      9zGqchQL/mkBmz7ZRFVFFef97jxagi0sPXop6VQaXdfpHupm0YOLeGr7U5wz/RxEE3K5HJpo
      LLt/GbduvJUFExYwqmIU2WwWRVG4bdNtXPTIRXhdXpr7mznt3tPojfZyxrQzSCaTGIbxufV1
      Op2k02my2axlkS7ENQzDco0CpFIpDMNAURTr2h0aK5PJkMlkUFUVTdNIp9OW1yiVSlkWba/X
      a8W988477zxyTwAzw6svv8nEqZNIxYZwlVfhcfuYMmHsEUuhgK7ruFwudF1HVVXLmVgQBUAy
      k+TV3a+imzrPbX+O5z95nmgqyktNLxGIB0hkE/zhwz8wc8xMwskwLzW9RK27lsHkIK83v85J
      20+iPdiOAwcvfPICn/R8AsCzHz/LW/veImfk+PPeP/P0tqeJZ+K8susVoukoiWyC53Y8h1N1
      0h/rJxAP8Pqe12nuy78/sLl5M2/uexPd1Hlx54u8uPNFhtJDvLDzBTpCHcQzcZ7Z9gyzxs0i
      nonzUtNLjK8Zj3/IT3+sn1EfjyKRS/BG6xtEkhF8ig/DMPio+yP8Q378Q35aBlqYUTcDgJ5w
      D39p+QsA77S+w9wJcwHIaTme/fhZYpkYr+x+BafqtHK/97x7ATAMA13XrfpqmmbVV9d1610A
      XddxOByoqmodX+gffm0K16oQd3gsXdc/E1fTNMt8V/j3Qzmie4OObqhFUV0oTg8VJV6yxv99
      1FeB2+3G6XRaf0zTRFEUXC6X9XJIVVkV9110Hx92fsiPz/gxp049lY3bN/LDpT8klo7xyzd/
      yfcWfY+R5SNRFZUljUuY0zCHQW2Q48cfz5UnX0koEcLn8vH9xd8nnAwTz8S58fQbqfBVsKN7
      B9/95nc56eiTeGb7M6xfvp6ckaO6pJo1J67huHHHEYgFmD56OpfNv8zaePeSky4BNzT7m7l+
      yfU0NjTy6u5XWb98PZFUhAfeeIB1i9bRUNFATs9xxowzWD5jOf4hP1NHTuX8uedz71v3csqk
      U6irqLNW3bOmn8V3e79LpbeSOUfNQfT8TTi1YSr3rLyHtmAba05cg9frxTAMPB4PGy7YwB+3
      /pF1i9bhdXkp95Sz5sQ1uN3u/I9oqmrV1OFwWP0iYjlGCyt74eb2eDyI5J8+LpfLMgoeGmv4
      tRoey+PxYBgGmqbh8Xisa+5yuQ56qhSw3aBf4pgvO8Z2g+ax3aA2Nl8TtgBsihpbADZFjS0A
      m6LGFoBNUWMLwKaosQVgU9TYArApamwB2BQ1tgBsipoj6AXSicWylJY4yeSE0pK8Ky+VSuHz
      +SzT0ueO1nI4VBeq8mW+EJzHNE2SySROpxOXy0Umk0FRFDwej7VfpYiQzWYtB6Gu65a/pOBV
      KXhQCt/dFRFSqZTlWynsj+n1eslkMgB4PB5yuZzlgNQ0jUwmY/lWstksbrcbVVU/k1eBTCaD
      aZoH5eX1ejFN86C8stksLpfLcksqisL+0H5ueuomzj7ubK5bfJ3Vn9STrHtiHSPKRnDfRfeB
      kbcne71eK9/hNfF4PNZ8w3Mv+Hey2ezn1uHQuIU6HBrL7XajKMpnYhVqUnCSer1eNE1D13XL
      qzTcC1TI63AcQQEY7N21k9qGUQwGg9SNrCcQitAwZiTuaJCBoSy5WJDqMVOYNLYe0oN8tLeH
      hlEjad27j9r6KlRvHd/4L9g3tHDDDncjAiiKgqZpQN5JqCj5B2Q2m7WciblcznIkFoxkBTdi
      Lpez/l5wMB4atyCYQh4FI97wuJlMxnKrHi6vwmKRy+XQNM26MYfbigvnV+grxHrkzUd4vfl1
      tnZt5cLZF1LqLAXghaYXeHrb0wCsnrua2aNnW/MV8h1eE4fDYZ1nNpvft7QwXyH34Q7Nw51H
      IW7hWFVVP1PfgkP00FjD66hpmpVDLpc7KK+CSW74vqTDOYI/AjkYO+FoVHQmTP4GDjNDIhok
      Gk8TGRzE5XKRSKYwzfwNoGVTjJ4wgUQ4jJ6L4fCNQP3yiz/w6R6VhdWx4EZ0Op3WnpkFp2jh
      uOFjPq9dON7pdFqrV2HlKsQtOFELYwqr9fBYhWOG53FoXgX36uFiDZ+j8JQrjF15/ErGVI1h
      1dxV1FbUWv2nTD2FWeNmseiYRcwcOxNVVa3ch+cy/HyH5z68fbi5D63D4Y77z9T3cLH+Vl7D
      +w97V/69uUEzyRi9/UHKKmuor/1qNsm13aBfjP+ObtC/u1civaUVTJ5c8XWnYVMk2P8LZFPU
      2AKwKWpsAdgUNbYAbIoaWwA2RY0tAJuixhaATVFjC8CmqLEFYFPU/B+U1qBzLLsH2wAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Note 3 Variables' width='192'>
      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
      Z+ZgWCYpiSk8/fpcFE0lNcXHvBWvEIqESUpIZMkHb9EZ7MLldLJy4/u0dLbhdDhYu30jtc31
      uBxONu7aQnVjLRElwu6KfVQ3HyQoh9hfXU5FXdXRPBxif20FFQcPEAiHKKutoPzgAboCfmb+
      6oFjzv03+ggUkSNouoYsy8jhIHJERY6ESEnLItEdrWagqCqSO5HsNB8Zmen/lXU4cnrjLB6O
      s2Aw7iFn4howBUduX1y9TsHpdCJJEk6nk/Mnn01+Vi5njz+DC6acQ35WLudMmMaF3fz0MdNw
      55yL5MnFlTmJCyZF9aeNmcL3pl1IdnoW508+mwunnkteZg4XTD6H8yefRXZ6JudPOoszx0wl
      JyOL8yedzYyJ08nLzOGS02Zw9rjTKcop4JLTZnDGqZPpkVfEWePPIDXFF1vblJHj6ZVfzJlj
      TyMjNSMmn9wtnzZmKjMmnRXjw/oOJCcjiwunnMs546eRl5nLhVPO4Zzx0yjOLeSc8dNITkyO
      jXPIDg6HA6fTicPhOIpLkoQzJStqu6xe5I46h2ljptIzv5hzJ0zjrHFnUJRTwIyJ05kx6Szy
      s/I4b+J0ZkyaTnFuIedNOosZk6ZTkJ3HjEnTmTH5bLLTMzl7/Blcctp5UT7uDM6beCbZ6ZnM
      mHgWF02Nys+bOJ2Lu3XOmzSdi6eeG9WZND2mc86Eacc9999oJPiLIodN9TUEwho9e/clyfvf
      vVHFI8EnBt/FSPA3+gj0RcYqKC6h4GtcSxwnJ/5/fsuhPQRKgbcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Scatter' width='192'>
      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
      +Ou3rTETAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weights' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
